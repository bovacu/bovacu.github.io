<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_keyboard_input" kind="class" language="C++" prot="public">
    <compoundname>RDE::KeyboardInput</compoundname>
    <basecompoundref refid="class_r_d_e_1_1_input" prot="public" virt="non-virtual">RDE::Input</basecompoundref>
    <includes refid="_keyboard_input_8h" local="no">KeyboardInput.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_keyboard_input_1ac329be9529475d63bf3f4af338c725f8" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespace_r_d_e_1ae1b377580a5f0afd4b6021072ed14bde" kindref="member">KeyCode</ref>, int &gt;</type>
        <definition>std::unordered_map&lt;KeyCode, int&gt; RDE::KeyboardInput::pressedKeyboardKeys</definition>
        <argsstring></argsstring>
        <name>pressedKeyboardKeys</name>
        <qualifiedname>RDE::KeyboardInput::pressedKeyboardKeys</qualifiedname>
        <briefdescription>
<para>Map KeyCode -&gt; <ref refid="struct_r_d_e_1_1_state" kindref="compound">State</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/KeyboardInput.h" line="23" column="33" bodyfile="engine/include/core/systems/inputSystem/input/KeyboardInput.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_keyboard_input_1a4847abf6a0d9747f59887d683e9ec99f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::KeyboardInput::init</definition>
        <argsstring>(Engine *_engine, Window *_window)</argsstring>
        <name>init</name>
        <qualifiedname>RDE::KeyboardInput::init</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> *</type>
          <declname>_engine</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>_window</declname>
        </param>
        <briefdescription>
<para>Initiates the system and sets initial keys states. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_engine</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_window</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/KeyboardInput.h" line="31" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_keyboard_input_1af4d09f731c2dc4706c1e5c864901614f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RDE::KeyboardInput::getState</definition>
        <argsstring>(int _keyOrButton)</argsstring>
        <name>getState</name>
        <qualifiedname>RDE::KeyboardInput::getState</qualifiedname>
        <param>
          <type>int</type>
          <declname>_keyOrButton</declname>
        </param>
        <briefdescription>
<para>Returns the state of a key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_keyOrButton</parametername>
</parameternamelist>
<parameterdescription>
<para>Key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/KeyboardInput.h" line="38" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_keyboard_input_1ab5afbcf31515b857cb3f0cd3b4a27789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::KeyboardInput::setState</definition>
        <argsstring>(int _keyOrButton, int _state)</argsstring>
        <name>setState</name>
        <qualifiedname>RDE::KeyboardInput::setState</qualifiedname>
        <param>
          <type>int</type>
          <declname>_keyOrButton</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_state</declname>
        </param>
        <briefdescription>
<para>Sets the state of a key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_keyOrButton</parametername>
</parameternamelist>
<parameterdescription>
<para>Key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_state</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_state" kindref="compound">State</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/KeyboardInput.h" line="45" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_r_d_e_1_1_keyboard_input_1a2573df8e103195c4a287121487ca21f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::KeyboardInput::onKeyDown</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onKeyDown</name>
        <qualifiedname>RDE::KeyboardInput::onKeyDown</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when a key is down. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/KeyboardInput.h" line="52" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_keyboard_input_1ae818a4f4a2cf0f0a84bb04d29098d860" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::KeyboardInput::onKeyUp</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onKeyUp</name>
        <qualifiedname>RDE::KeyboardInput::onKeyUp</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when a key is up. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/KeyboardInput.h" line="58" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_keyboard_input_1ac23cf36e56781051456cdee72ddc2310" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::KeyboardInput::onTextTyped</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onTextTyped</name>
        <qualifiedname>RDE::KeyboardInput::onTextTyped</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/KeyboardInput.h" line="60" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class handles all of the keyboard inputs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>RDE::Input</label>
        <link refid="class_r_d_e_1_1_input"/>
      </node>
      <node id="1">
        <label>RDE::KeyboardInput</label>
        <link refid="class_r_d_e_1_1_keyboard_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13">
        <label>RDE::Delegate&lt; void()&gt;</label>
        <link refid="struct_r_d_e_1_1_delegate"/>
      </node>
      <node id="11">
        <label>RDE::Delegate&lt; void(const RDE::Vec2 &amp;)&gt;</label>
        <link refid="struct_r_d_e_1_1_delegate"/>
      </node>
      <node id="12">
        <label>RDE::Delegate&lt; void(int)&gt;</label>
        <link refid="struct_r_d_e_1_1_delegate"/>
      </node>
      <node id="27">
        <label>RDE::Color</label>
        <link refid="struct_r_d_e_1_1_color"/>
        <childnode refid="27" relation="usage">
          <edgelabel>Black</edgelabel>
          <edgelabel>Blue</edgelabel>
          <edgelabel>Brown</edgelabel>
          <edgelabel>Disabled</edgelabel>
          <edgelabel>Gray</edgelabel>
          <edgelabel>Green</edgelabel>
          <edgelabel>Magenta</edgelabel>
          <edgelabel>NO_COLOR</edgelabel>
          <edgelabel>Orange</edgelabel>
          <edgelabel>Placeholder</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>RDE::ConfigManager</label>
        <link refid="class_r_d_e_1_1_config_manager"/>
      </node>
      <node id="22">
        <label>RDE::Console</label>
        <link refid="class_r_d_e_1_1_console"/>
      </node>
      <node id="29">
        <label>RDE::ControllerVibrationManager</label>
        <link refid="class_r_d_e_1_1_controller_vibration_manager"/>
      </node>
      <node id="26">
        <label>RDE::DebugOptions</label>
        <link refid="struct_r_d_e_1_1_debug_options"/>
        <childnode refid="27" relation="usage">
          <edgelabel>boxLineColor</edgelabel>
          <edgelabel>boxRadiusColor</edgelabel>
          <edgelabel>circleLineColor</edgelabel>
          <edgelabel>circleRadiusColor</edgelabel>
          <edgelabel>polygonLineColor</edgelabel>
          <edgelabel>polygonRadiusColor</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>RDE::ECSManager</label>
        <link refid="class_r_d_e_1_1_e_c_s_manager"/>
      </node>
      <node id="14">
        <label>RDE::Engine</label>
        <link refid="class_r_d_e_1_1_engine"/>
        <childnode refid="15" relation="usage">
          <edgelabel>manager</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>rdeConfig</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>RDE::FileManager</label>
        <link refid="class_r_d_e_1_1_file_manager"/>
      </node>
      <node id="19">
        <label>RDE::FontManager</label>
        <link refid="class_r_d_e_1_1_font_manager"/>
      </node>
      <node id="2">
        <label>RDE::Input</label>
        <link refid="class_r_d_e_1_1_input"/>
        <childnode refid="3" relation="usage">
          <edgelabel>window</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>engine</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>RDE::InputManager</label>
        <link refid="class_r_d_e_1_1_input_manager"/>
      </node>
      <node id="1">
        <label>RDE::KeyboardInput</label>
        <link refid="class_r_d_e_1_1_keyboard_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>RDE::LocalizationConfig</label>
        <link refid="struct_r_d_e_1_1_localization_config"/>
      </node>
      <node id="32">
        <label>RDE::LocalizationInfo</label>
        <link refid="struct_r_d_e_1_1_localization_info"/>
      </node>
      <node id="31">
        <label>RDE::LocalizationManager</label>
        <link refid="class_r_d_e_1_1_localization_manager"/>
        <childnode refid="32" relation="usage">
          <edgelabel>localizationInfo</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>RDE::Manager</label>
        <link refid="class_r_d_e_1_1_manager"/>
        <childnode refid="14" relation="usage">
          <edgelabel>engine</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>configManager</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>textureManager</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>shaderManager</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>fontManager</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>soundManager</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>inputManager</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>consoleManager</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>sceneManager</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>ecsManager</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>physics</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>fileManager</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>controllerVibrationManager</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>renderManager</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>localizationManager</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>RDE::PhysicsManager</label>
        <link refid="class_r_d_e_1_1_physics_manager"/>
        <childnode refid="26" relation="usage">
          <edgelabel>debugOptions</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>RDE::RDEConfig</label>
        <link refid="struct_r_d_e_1_1_r_d_e_config"/>
        <childnode refid="6" relation="usage">
          <edgelabel>windowData</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>projectData</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>RDE::RDEConfig::ProjectProperties</label>
        <link refid="struct_r_d_e_1_1_r_d_e_config_1_1_project_properties"/>
        <childnode refid="9" relation="usage">
          <edgelabel>localizationConfig</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>RDE::RDEConfig::WindowProperties</label>
        <link refid="struct_r_d_e_1_1_r_d_e_config_1_1_window_properties"/>
        <childnode refid="7" relation="usage">
          <edgelabel>resolution</edgelabel>
          <edgelabel>size</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>RDE::RenderManager</label>
        <link refid="class_r_d_e_1_1_render_manager"/>
      </node>
      <node id="23">
        <label>RDE::SceneManager</label>
        <link refid="class_r_d_e_1_1_scene_manager"/>
      </node>
      <node id="18">
        <label>RDE::ShaderManager</label>
        <link refid="class_r_d_e_1_1_shader_manager"/>
      </node>
      <node id="20">
        <label>RDE::SoundManager</label>
        <link refid="class_r_d_e_1_1_sound_manager"/>
      </node>
      <node id="17">
        <label>RDE::TextureAtlasManager</label>
        <link refid="class_r_d_e_1_1_texture_atlas_manager"/>
      </node>
      <node id="3">
        <label>RDE::Window</label>
        <link refid="class_r_d_e_1_1_window"/>
        <childnode refid="4" relation="usage">
          <edgelabel>eventCallback</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>shouldUpdateWindow</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>onWindowMovedCallback</edgelabel>
          <edgelabel>onWindowResizedCallback</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>onWindowDisplayChangedCallback</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>onWindowFocusedCallback</edgelabel>
          <edgelabel>onWindowMaximizedCallback</edgelabel>
          <edgelabel>onWindowMinimizedCallback</edgelabel>
          <edgelabel>onWindowUnfocusedCallback</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>RDE::UniqueDelegate&lt; bool()&gt;</label>
        <link refid="struct_r_d_e_1_1_unique_delegate"/>
      </node>
      <node id="4">
        <label>RDE::UniqueDelegate&lt; void(RDE::Event &amp;)&gt;</label>
        <link refid="struct_r_d_e_1_1_unique_delegate"/>
      </node>
      <node id="7">
        <label>RDE::Vec2&lt; int &gt;</label>
        <link refid="struct_r_d_e_1_1_vec2"/>
      </node>
    </collaborationgraph>
    <location file="engine/include/core/systems/inputSystem/input/KeyboardInput.h" line="18" column="5" bodyfile="engine/include/core/systems/inputSystem/input/KeyboardInput.h" bodystart="18" bodyend="61"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_input_1a536e12c69a33f9e454c26368f751da79" prot="protected" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>engine</name></member>
      <member refid="class_r_d_e_1_1_input_1ac6c4192a1132075c8cf505dfcf79bf73" prot="protected" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>events</name></member>
      <member refid="class_r_d_e_1_1_keyboard_input_1af4d09f731c2dc4706c1e5c864901614f" prot="public" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>getState</name></member>
      <member refid="class_r_d_e_1_1_input_1a0f6948c9ed8dd70e436b9f647ef55cf3" prot="protected" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>ignoredEvents</name></member>
      <member refid="class_r_d_e_1_1_input_1a4805e279579b7cc4c1928f467e9803f2" prot="public" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>ignoreEvent</name></member>
      <member refid="class_r_d_e_1_1_keyboard_input_1a4847abf6a0d9747f59887d683e9ec99f" prot="public" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>init</name></member>
      <member refid="class_r_d_e_1_1_keyboard_input_1a2573df8e103195c4a287121487ca21f4" prot="private" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>onKeyDown</name></member>
      <member refid="class_r_d_e_1_1_keyboard_input_1ae818a4f4a2cf0f0a84bb04d29098d860" prot="private" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>onKeyUp</name></member>
      <member refid="class_r_d_e_1_1_keyboard_input_1ac23cf36e56781051456cdee72ddc2310" prot="private" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>onTextTyped</name></member>
      <member refid="class_r_d_e_1_1_input_1a881b09a394276e2f88f45ff2662ea832" prot="public" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>pollEvent</name></member>
      <member refid="class_r_d_e_1_1_keyboard_input_1ac329be9529475d63bf3f4af338c725f8" prot="private" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>pressedKeyboardKeys</name></member>
      <member refid="class_r_d_e_1_1_keyboard_input_1ab5afbcf31515b857cb3f0cd3b4a27789" prot="public" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>setState</name></member>
      <member refid="class_r_d_e_1_1_input_1a5bf86e083b55251e1ea4c3c814e3b3db" prot="protected" virt="non-virtual"><scope>RDE::KeyboardInput</scope><name>window</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
