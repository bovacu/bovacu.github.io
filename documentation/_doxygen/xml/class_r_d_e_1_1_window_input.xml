<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_window_input" kind="class" language="C++" prot="public">
    <compoundname>RDE::WindowInput</compoundname>
    <basecompoundref refid="class_r_d_e_1_1_input" prot="public" virt="non-virtual">RDE::Input</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1ab3244234bf1fee4a7b4908819854be5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::init</definition>
        <argsstring>(Engine *_engine, Window *_window)</argsstring>
        <name>init</name>
        <qualifiedname>RDE::WindowInput::init</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> *</type>
          <declname>_engine</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>_window</declname>
        </param>
        <briefdescription>
<para>Initiates the system and the initial states. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_engine</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_window</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="20" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1acc3036e22939b819b0b3d64e5ea5affd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowEvent</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWindowEvent</name>
        <qualifiedname>RDE::WindowInput::onWindowEvent</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Is the Hub for all the sb-events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="27" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a79a55aac843034215ce44c62d8d42835" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowEnter</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWindowEnter</name>
        <qualifiedname>RDE::WindowInput::onWindowEnter</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when the mouse enters the window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="33" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a38876eb07cf0d8059e1bb10954d0466c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowExit</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWindowExit</name>
        <qualifiedname>RDE::WindowInput::onWindowExit</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when the mouse leaves the window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="39" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a724bf1c5924d8d7f6a21e9bbc706f051" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowGainFocus</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWindowGainFocus</name>
        <qualifiedname>RDE::WindowInput::onWindowGainFocus</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when the window gains focus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="45" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a8a944294f5aa760be1b7061b4cd04db0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowLostFocus</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWindowLostFocus</name>
        <qualifiedname>RDE::WindowInput::onWindowLostFocus</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when the window looses focus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="51" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a2b5de3f8a834d594a3ec5062681c8100" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowResize</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWindowResize</name>
        <qualifiedname>RDE::WindowInput::onWindowResize</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when the window is resized. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="57" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a834c71e6e902ffae3e7171c8abf82e63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowMoved</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWindowMoved</name>
        <qualifiedname>RDE::WindowInput::onWindowMoved</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when the window is moved. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="63" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1aacb684091dc88c71de316b168681b206" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowDisplayChanged</definition>
        <argsstring>(int _newWindowDisplay)</argsstring>
        <name>onWindowDisplayChanged</name>
        <qualifiedname>RDE::WindowInput::onWindowDisplayChanged</qualifiedname>
        <param>
          <type>int</type>
          <declname>_newWindowDisplay</declname>
        </param>
        <briefdescription>
<para>Handles when the window is changed of display. SDL does not provide a direct event for this, so we could call this &apos;an artifical&apos; even, this is why the parameter doesn&apos;t match the others. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para>int </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="70" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a194de077db6ba712f92bfa240f18b1a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowMinimized</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWindowMinimized</name>
        <qualifiedname>RDE::WindowInput::onWindowMinimized</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when the window is minimized. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="76" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1ae85d46fa47504d6e75c53b50cdda770e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWindowMaximized</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWindowMaximized</name>
        <qualifiedname>RDE::WindowInput::onWindowMaximized</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when the window is maximized. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="82" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1ac7a7c654ba8972749db7e90de0894463" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onQuit</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onQuit</name>
        <qualifiedname>RDE::WindowInput::onQuit</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles when the window is closed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="88" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1aaf62d29d1a7cf574457292fee58c90db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onDestroyApp</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onDestroyApp</name>
        <qualifiedname>RDE::WindowInput::onDestroyApp</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles Mobile application quit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="94" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a5385c66b18bf91ca7377a11e3258679a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onDidEnterForegroundApp</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onDidEnterForegroundApp</name>
        <qualifiedname>RDE::WindowInput::onDidEnterForegroundApp</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles Mobile did enter foreground. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="100" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a25532834724fd3dea8a1ee273a8e0697" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onDidEnterBackground</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onDidEnterBackground</name>
        <qualifiedname>RDE::WindowInput::onDidEnterBackground</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles Mobile did enter background. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="106" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1a8400d96f9d1e2a5354d01c453d69416a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWillEnterForegroundApp</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWillEnterForegroundApp</name>
        <qualifiedname>RDE::WindowInput::onWillEnterForegroundApp</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles Mobile will enter foreground. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="112" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_input_1aca06b63ad2a51eeee7c38031efe84314" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::WindowInput::onWillEnterBackground</definition>
        <argsstring>(SDL_Event &amp;_event)</argsstring>
        <name>onWillEnterBackground</name>
        <qualifiedname>RDE::WindowInput::onWillEnterBackground</qualifiedname>
        <param>
          <type>SDL_Event &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles Mobile will enter background. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="118" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>RDE::Input</label>
        <link refid="class_r_d_e_1_1_input"/>
      </node>
      <node id="1">
        <label>RDE::WindowInput</label>
        <link refid="class_r_d_e_1_1_window_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13">
        <label>RDE::Delegate&lt; void()&gt;</label>
        <link refid="struct_r_d_e_1_1_delegate"/>
      </node>
      <node id="11">
        <label>RDE::Delegate&lt; void(const RDE::Vec2 &amp;)&gt;</label>
        <link refid="struct_r_d_e_1_1_delegate"/>
      </node>
      <node id="12">
        <label>RDE::Delegate&lt; void(int)&gt;</label>
        <link refid="struct_r_d_e_1_1_delegate"/>
      </node>
      <node id="27">
        <label>RDE::Color</label>
        <link refid="struct_r_d_e_1_1_color"/>
        <childnode refid="27" relation="usage">
          <edgelabel>Black</edgelabel>
          <edgelabel>Blue</edgelabel>
          <edgelabel>Brown</edgelabel>
          <edgelabel>Disabled</edgelabel>
          <edgelabel>Gray</edgelabel>
          <edgelabel>Green</edgelabel>
          <edgelabel>Magenta</edgelabel>
          <edgelabel>NO_COLOR</edgelabel>
          <edgelabel>Orange</edgelabel>
          <edgelabel>Placeholder</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>RDE::ConfigManager</label>
        <link refid="class_r_d_e_1_1_config_manager"/>
      </node>
      <node id="22">
        <label>RDE::Console</label>
        <link refid="class_r_d_e_1_1_console"/>
      </node>
      <node id="29">
        <label>RDE::ControllerVibrationManager</label>
        <link refid="class_r_d_e_1_1_controller_vibration_manager"/>
      </node>
      <node id="26">
        <label>RDE::DebugOptions</label>
        <link refid="struct_r_d_e_1_1_debug_options"/>
        <childnode refid="27" relation="usage">
          <edgelabel>boxLineColor</edgelabel>
          <edgelabel>boxRadiusColor</edgelabel>
          <edgelabel>circleLineColor</edgelabel>
          <edgelabel>circleRadiusColor</edgelabel>
          <edgelabel>polygonLineColor</edgelabel>
          <edgelabel>polygonRadiusColor</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>RDE::ECSManager</label>
        <link refid="class_r_d_e_1_1_e_c_s_manager"/>
      </node>
      <node id="14">
        <label>RDE::Engine</label>
        <link refid="class_r_d_e_1_1_engine"/>
        <childnode refid="15" relation="usage">
          <edgelabel>manager</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>rdeConfig</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>RDE::FileManager</label>
        <link refid="class_r_d_e_1_1_file_manager"/>
      </node>
      <node id="19">
        <label>RDE::FontManager</label>
        <link refid="class_r_d_e_1_1_font_manager"/>
      </node>
      <node id="2">
        <label>RDE::Input</label>
        <link refid="class_r_d_e_1_1_input"/>
        <childnode refid="3" relation="usage">
          <edgelabel>window</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>engine</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>RDE::InputManager</label>
        <link refid="class_r_d_e_1_1_input_manager"/>
      </node>
      <node id="9">
        <label>RDE::LocalizationConfig</label>
        <link refid="struct_r_d_e_1_1_localization_config"/>
      </node>
      <node id="32">
        <label>RDE::LocalizationInfo</label>
        <link refid="struct_r_d_e_1_1_localization_info"/>
      </node>
      <node id="31">
        <label>RDE::LocalizationManager</label>
        <link refid="class_r_d_e_1_1_localization_manager"/>
        <childnode refid="32" relation="usage">
          <edgelabel>localizationInfo</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>RDE::Manager</label>
        <link refid="class_r_d_e_1_1_manager"/>
        <childnode refid="14" relation="usage">
          <edgelabel>engine</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>configManager</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>textureManager</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>shaderManager</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>fontManager</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>soundManager</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>inputManager</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>consoleManager</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>sceneManager</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>ecsManager</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>physics</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>fileManager</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>controllerVibrationManager</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>renderManager</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>localizationManager</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>RDE::PhysicsManager</label>
        <link refid="class_r_d_e_1_1_physics_manager"/>
        <childnode refid="26" relation="usage">
          <edgelabel>debugOptions</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>RDE::RDEConfig</label>
        <link refid="struct_r_d_e_1_1_r_d_e_config"/>
        <childnode refid="6" relation="usage">
          <edgelabel>windowData</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>projectData</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>RDE::RDEConfig::ProjectProperties</label>
        <link refid="struct_r_d_e_1_1_r_d_e_config_1_1_project_properties"/>
        <childnode refid="9" relation="usage">
          <edgelabel>localizationConfig</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>RDE::RDEConfig::WindowProperties</label>
        <link refid="struct_r_d_e_1_1_r_d_e_config_1_1_window_properties"/>
        <childnode refid="7" relation="usage">
          <edgelabel>resolution</edgelabel>
          <edgelabel>size</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>RDE::RenderManager</label>
        <link refid="class_r_d_e_1_1_render_manager"/>
      </node>
      <node id="23">
        <label>RDE::SceneManager</label>
        <link refid="class_r_d_e_1_1_scene_manager"/>
      </node>
      <node id="18">
        <label>RDE::ShaderManager</label>
        <link refid="class_r_d_e_1_1_shader_manager"/>
      </node>
      <node id="20">
        <label>RDE::SoundManager</label>
        <link refid="class_r_d_e_1_1_sound_manager"/>
      </node>
      <node id="17">
        <label>RDE::TextureAtlasManager</label>
        <link refid="class_r_d_e_1_1_texture_atlas_manager"/>
      </node>
      <node id="3">
        <label>RDE::Window</label>
        <link refid="class_r_d_e_1_1_window"/>
        <childnode refid="4" relation="usage">
          <edgelabel>eventCallback</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>shouldUpdateWindow</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>onWindowMovedCallback</edgelabel>
          <edgelabel>onWindowResizedCallback</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>onWindowDisplayChangedCallback</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>onWindowFocusedCallback</edgelabel>
          <edgelabel>onWindowMaximizedCallback</edgelabel>
          <edgelabel>onWindowMinimizedCallback</edgelabel>
          <edgelabel>onWindowUnfocusedCallback</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>RDE::WindowInput</label>
        <link refid="class_r_d_e_1_1_window_input"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>RDE::UniqueDelegate&lt; bool()&gt;</label>
        <link refid="struct_r_d_e_1_1_unique_delegate"/>
      </node>
      <node id="4">
        <label>RDE::UniqueDelegate&lt; void(RDE::Event &amp;)&gt;</label>
        <link refid="struct_r_d_e_1_1_unique_delegate"/>
      </node>
      <node id="7">
        <label>RDE::Vec2&lt; int &gt;</label>
        <link refid="struct_r_d_e_1_1_vec2"/>
      </node>
    </collaborationgraph>
    <location file="engine/include/core/systems/inputSystem/input/WindowInput.h" line="13" column="5" bodyfile="engine/include/core/systems/inputSystem/input/WindowInput.h" bodystart="13" bodyend="119"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_input_1a536e12c69a33f9e454c26368f751da79" prot="protected" virt="non-virtual"><scope>RDE::WindowInput</scope><name>engine</name></member>
      <member refid="class_r_d_e_1_1_input_1ac6c4192a1132075c8cf505dfcf79bf73" prot="protected" virt="non-virtual"><scope>RDE::WindowInput</scope><name>events</name></member>
      <member refid="class_r_d_e_1_1_input_1a0f6948c9ed8dd70e436b9f647ef55cf3" prot="protected" virt="non-virtual"><scope>RDE::WindowInput</scope><name>ignoredEvents</name></member>
      <member refid="class_r_d_e_1_1_input_1a4805e279579b7cc4c1928f467e9803f2" prot="public" virt="non-virtual"><scope>RDE::WindowInput</scope><name>ignoreEvent</name></member>
      <member refid="class_r_d_e_1_1_window_input_1ab3244234bf1fee4a7b4908819854be5a" prot="public" virt="non-virtual"><scope>RDE::WindowInput</scope><name>init</name></member>
      <member refid="class_r_d_e_1_1_window_input_1aaf62d29d1a7cf574457292fee58c90db" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onDestroyApp</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a25532834724fd3dea8a1ee273a8e0697" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onDidEnterBackground</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a5385c66b18bf91ca7377a11e3258679a" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onDidEnterForegroundApp</name></member>
      <member refid="class_r_d_e_1_1_window_input_1ac7a7c654ba8972749db7e90de0894463" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onQuit</name></member>
      <member refid="class_r_d_e_1_1_window_input_1aca06b63ad2a51eeee7c38031efe84314" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWillEnterBackground</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a8400d96f9d1e2a5354d01c453d69416a" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWillEnterForegroundApp</name></member>
      <member refid="class_r_d_e_1_1_window_input_1aacb684091dc88c71de316b168681b206" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowDisplayChanged</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a79a55aac843034215ce44c62d8d42835" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowEnter</name></member>
      <member refid="class_r_d_e_1_1_window_input_1acc3036e22939b819b0b3d64e5ea5affd" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowEvent</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a38876eb07cf0d8059e1bb10954d0466c" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowExit</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a724bf1c5924d8d7f6a21e9bbc706f051" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowGainFocus</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a8a944294f5aa760be1b7061b4cd04db0" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowLostFocus</name></member>
      <member refid="class_r_d_e_1_1_window_input_1ae85d46fa47504d6e75c53b50cdda770e" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowMaximized</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a194de077db6ba712f92bfa240f18b1a7" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowMinimized</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a834c71e6e902ffae3e7171c8abf82e63" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowMoved</name></member>
      <member refid="class_r_d_e_1_1_window_input_1a2b5de3f8a834d594a3ec5062681c8100" prot="private" virt="non-virtual"><scope>RDE::WindowInput</scope><name>onWindowResize</name></member>
      <member refid="class_r_d_e_1_1_input_1a881b09a394276e2f88f45ff2662ea832" prot="public" virt="non-virtual"><scope>RDE::WindowInput</scope><name>pollEvent</name></member>
      <member refid="class_r_d_e_1_1_input_1a5bf86e083b55251e1ea4c3c814e3b3db" prot="protected" virt="non-virtual"><scope>RDE::WindowInput</scope><name>window</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
