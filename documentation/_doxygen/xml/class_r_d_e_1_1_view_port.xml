<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_view_port" kind="class" language="C++" prot="public">
    <compoundname>RDE::ViewPort</compoundname>
    <includes refid="_view_port_8h" local="no">ViewPort.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_r_d_e_1_1_view_port_1ad8bd9afbbd7af19d996da80e9d25890d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Camera</definition>
        <argsstring></argsstring>
        <name>Camera</name>
        <qualifiedname>RDE::ViewPort::Camera</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_camera" kindref="compound">Camera</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="19" column="22" bodyfile="engine/include/core/render/elements/ViewPort.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_r_d_e_1_1_view_port_1a9816083e25bae0b2f472e19382136687" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Canvas</definition>
        <argsstring></argsstring>
        <name>Canvas</name>
        <qualifiedname>RDE::ViewPort::Canvas</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_canvas" kindref="compound">Canvas</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="20" column="22" bodyfile="engine/include/core/render/elements/ViewPort.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_view_port_1ab173d1b4445905675850a38488bfc034" prot="private" static="no" mutable="no">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref></type>
        <definition>Vec2I RDE::ViewPort::virtualResolution</definition>
        <argsstring></argsstring>
        <name>virtualResolution</name>
        <qualifiedname>RDE::ViewPort::virtualResolution</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Resolution that we want to render at. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="26" column="19" bodyfile="engine/include/core/render/elements/ViewPort.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_view_port_1a363292dfee12de6a46dccb27a20ae6cb" prot="private" static="no" mutable="no">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref></type>
        <definition>Vec2I RDE::ViewPort::deviceResolution</definition>
        <argsstring></argsstring>
        <name>deviceResolution</name>
        <qualifiedname>RDE::ViewPort::deviceResolution</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Actual resolution of the <ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> or the device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="31" column="19" bodyfile="engine/include/core/render/elements/ViewPort.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_view_port_1a0e0cdeffcf5f679b409ed71e46183589" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RDE::ViewPort::landscape</definition>
        <argsstring></argsstring>
        <name>landscape</name>
        <qualifiedname>RDE::ViewPort::landscape</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="33" column="18" bodyfile="engine/include/core/render/elements/ViewPort.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_view_port_1a96d820673a92f3f48796ef66f7a92d94" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float RDE::ViewPort::scaleWithWidth</definition>
        <argsstring></argsstring>
        <name>scaleWithWidth</name>
        <qualifiedname>RDE::ViewPort::scaleWithWidth</qualifiedname>
        <initializer>= 0.5f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="35" column="19" bodyfile="engine/include/core/render/elements/ViewPort.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1a986a1747530e674e8f5b22704d1f36da" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void RDE::ViewPort::update</definition>
        <argsstring>(const Vec2I &amp;_deviceSize)</argsstring>
        <name>update</name>
        <qualifiedname>RDE::ViewPort::update</qualifiedname>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref> &amp;</type>
          <declname>_deviceSize</declname>
        </param>
        <briefdescription>
<para>Updates the device resolution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_deviceSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Device resolution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="42" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1a016b735269ac3d25ce719f13f9e2dba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RDE::ViewPort::ViewPort</definition>
        <argsstring>(const Vec2I &amp;_deviceSize, const Vec2I &amp;_resolutionSize)</argsstring>
        <name>ViewPort</name>
        <qualifiedname>RDE::ViewPort::ViewPort</qualifiedname>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref> &amp;</type>
          <declname>_deviceSize</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref> &amp;</type>
          <declname>_resolutionSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="45" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1a546ffa7abb78ef8bd99faa1ad64ada18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref></type>
        <definition>Vec2I RDE::ViewPort::getVirtualResolution</definition>
        <argsstring>() const</argsstring>
        <name>getVirtualResolution</name>
        <qualifiedname>RDE::ViewPort::getVirtualResolution</qualifiedname>
        <briefdescription>
<para>Returns the virtual resolution. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vec2I </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="51" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1aa964625498793eb1651eeab89a5b913c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RDE::ViewPort::getVirtualAspectRatio</definition>
        <argsstring>() const</argsstring>
        <name>getVirtualAspectRatio</name>
        <qualifiedname>RDE::ViewPort::getVirtualAspectRatio</qualifiedname>
        <briefdescription>
<para>Returns the aspect ratio we want to keep rewarding the physical screen size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="57" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1ae48d4d632eb6caaeadf674a60aee276a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RDE::ViewPort::getPhysicalAspectRatio</definition>
        <argsstring>() const</argsstring>
        <name>getPhysicalAspectRatio</name>
        <qualifiedname>RDE::ViewPort::getPhysicalAspectRatio</qualifiedname>
        <briefdescription>
<para>Returns the aspect ratio of the physical screen. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="63" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1a68ae601048522f9c480a11d784185024" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref></type>
        <definition>Vec2I RDE::ViewPort::getDeviceResolution</definition>
        <argsstring>() const</argsstring>
        <name>getDeviceResolution</name>
        <qualifiedname>RDE::ViewPort::getDeviceResolution</qualifiedname>
        <briefdescription>
<para>Returns the device resolution. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vec2I </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="69" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1ae24805da3f5a92519e131d6a23e8d37f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::ViewPort::setUIScaleWeightsForWidthAndHeight</definition>
        <argsstring>(float _width, float _height)</argsstring>
        <name>setUIScaleWeightsForWidthAndHeight</name>
        <qualifiedname>RDE::ViewPort::setUIScaleWeightsForWidthAndHeight</qualifiedname>
        <param>
          <type>float</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets if the UI scales towards width screen changes, height screen changes or both. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Value between 1f and 0f. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_height</parametername>
</parameternamelist>
<parameterdescription>
<para>The complement of _width to add up to 1f. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="76" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1a9cd0c4f3c39d532c8c050c47c0626bf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref></type>
        <definition>Vec2F RDE::ViewPort::getUIScaleWeights</definition>
        <argsstring>() const</argsstring>
        <name>getUIScaleWeights</name>
        <qualifiedname>RDE::ViewPort::getUIScaleWeights</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the values set in setUIScaleWeightsForWidthAndHeight. <simplesect kind="return"><para>Vec2F </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="82" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1a55eec079a0543947832ee59e914944fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::ViewPort::isLandscape</definition>
        <argsstring>() const</argsstring>
        <name>isLandscape</name>
        <qualifiedname>RDE::ViewPort::isLandscape</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="84" column="18" bodyfile="engine/include/core/render/elements/ViewPort.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_view_port_1a629091c42d24c4028382f87bba84d63d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual RDE::ViewPort::~ViewPort</definition>
        <argsstring>()</argsstring>
        <name>~ViewPort</name>
        <qualifiedname>RDE::ViewPort::~ViewPort</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/elements/ViewPort.h" line="86" column="21" bodyfile="engine/include/core/render/elements/ViewPort.h" bodystart="86" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents the way the scene is going to be rendered and how much of the screen is going to be used to drawBatched. This interface is the base of ant custom-viewport provided by the engine and must be followed for any user-defined viewport. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="engine/include/core/render/elements/ViewPort.h" line="17" column="5" bodyfile="engine/include/core/render/elements/ViewPort.h" bodystart="17" bodyend="87"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_view_port_1ad8bd9afbbd7af19d996da80e9d25890d" prot="private" virt="non-virtual"><scope>RDE::ViewPort</scope><name>Camera</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a9816083e25bae0b2f472e19382136687" prot="private" virt="non-virtual"><scope>RDE::ViewPort</scope><name>Canvas</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a363292dfee12de6a46dccb27a20ae6cb" prot="private" virt="non-virtual"><scope>RDE::ViewPort</scope><name>deviceResolution</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a68ae601048522f9c480a11d784185024" prot="public" virt="non-virtual"><scope>RDE::ViewPort</scope><name>getDeviceResolution</name></member>
      <member refid="class_r_d_e_1_1_view_port_1ae48d4d632eb6caaeadf674a60aee276a" prot="public" virt="non-virtual"><scope>RDE::ViewPort</scope><name>getPhysicalAspectRatio</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a9cd0c4f3c39d532c8c050c47c0626bf3" prot="public" virt="non-virtual"><scope>RDE::ViewPort</scope><name>getUIScaleWeights</name></member>
      <member refid="class_r_d_e_1_1_view_port_1aa964625498793eb1651eeab89a5b913c" prot="public" virt="non-virtual"><scope>RDE::ViewPort</scope><name>getVirtualAspectRatio</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a546ffa7abb78ef8bd99faa1ad64ada18" prot="public" virt="non-virtual"><scope>RDE::ViewPort</scope><name>getVirtualResolution</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a55eec079a0543947832ee59e914944fa" prot="public" virt="non-virtual"><scope>RDE::ViewPort</scope><name>isLandscape</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a0e0cdeffcf5f679b409ed71e46183589" prot="private" virt="non-virtual"><scope>RDE::ViewPort</scope><name>landscape</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a96d820673a92f3f48796ef66f7a92d94" prot="private" virt="non-virtual"><scope>RDE::ViewPort</scope><name>scaleWithWidth</name></member>
      <member refid="class_r_d_e_1_1_view_port_1ae24805da3f5a92519e131d6a23e8d37f" prot="public" virt="non-virtual"><scope>RDE::ViewPort</scope><name>setUIScaleWeightsForWidthAndHeight</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a986a1747530e674e8f5b22704d1f36da" prot="protected" virt="virtual"><scope>RDE::ViewPort</scope><name>update</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a016b735269ac3d25ce719f13f9e2dba5" prot="public" virt="non-virtual"><scope>RDE::ViewPort</scope><name>ViewPort</name></member>
      <member refid="class_r_d_e_1_1_view_port_1ab173d1b4445905675850a38488bfc034" prot="private" virt="non-virtual"><scope>RDE::ViewPort</scope><name>virtualResolution</name></member>
      <member refid="class_r_d_e_1_1_view_port_1a629091c42d24c4028382f87bba84d63d" prot="public" virt="virtual"><scope>RDE::ViewPort</scope><name>~ViewPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
