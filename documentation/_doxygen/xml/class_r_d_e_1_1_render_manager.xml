<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_render_manager" kind="class" language="C++" prot="public">
    <compoundname>RDE::RenderManager</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_r_d_e_1_1_render_manager_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Scene</definition>
        <argsstring></argsstring>
        <name>Scene</name>
        <qualifiedname>RDE::RenderManager::Scene</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_scene" kindref="compound">Scene</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="23" column="22" bodyfile="engine/include/core/render/RenderManager.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_r_d_e_1_1_render_manager_1a3e1914489e4bed4f9f23cdeab34a43dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Engine</definition>
        <argsstring></argsstring>
        <name>Engine</name>
        <qualifiedname>RDE::RenderManager::Engine</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="24" column="22" bodyfile="engine/include/core/render/RenderManager.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_r_d_e_1_1_render_manager_1af4f241a517f779b649085b1b171a83b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ImGuiScene</definition>
        <argsstring></argsstring>
        <name>ImGuiScene</name>
        <qualifiedname>RDE::RenderManager::ImGuiScene</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_im_gui_scene" kindref="compound">ImGuiScene</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="25" column="22" bodyfile="engine/include/core/render/RenderManager.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_r_d_e_1_1_render_manager_1a7e815028687ed9f9e9e25851d8a17b27" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class FrameBuffer</definition>
        <argsstring></argsstring>
        <name>FrameBuffer</name>
        <qualifiedname>RDE::RenderManager::FrameBuffer</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_frame_buffer" kindref="compound">FrameBuffer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="26" column="22" bodyfile="engine/include/core/render/RenderManager.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_r_d_e_1_1_render_manager_1a9816083e25bae0b2f472e19382136687" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Canvas</definition>
        <argsstring></argsstring>
        <name>Canvas</name>
        <qualifiedname>RDE::RenderManager::Canvas</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_canvas" kindref="compound">Canvas</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="27" column="22" bodyfile="engine/include/core/render/RenderManager.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_r_d_e_1_1_render_manager_1adddd5c43ff870a047aa66db4edf82a7e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Manager</definition>
        <argsstring></argsstring>
        <name>Manager</name>
        <qualifiedname>RDE::RenderManager::Manager</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_manager" kindref="compound">Manager</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="28" column="22" bodyfile="engine/include/core/render/RenderManager.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_render_manager_1a22d3bca812f79c529beae44af4d2114f" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_sprite_batch" kindref="compound">SpriteBatch</ref></type>
        <definition>SpriteBatch RDE::RenderManager::batch</definition>
        <argsstring></argsstring>
        <name>batch</name>
        <qualifiedname>RDE::RenderManager::batch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_r_d_e_1_1_sprite_batch" kindref="compound">SpriteBatch</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="42" column="25" bodyfile="engine/include/core/render/RenderManager.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_render_manager_1aa8388a2e65396efd0350d76dd9773c73" prot="private" static="no" mutable="no">
        <type><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref></type>
        <definition>Color RDE::RenderManager::clearColor</definition>
        <argsstring></argsstring>
        <name>clearColor</name>
        <qualifiedname>RDE::RenderManager::clearColor</qualifiedname>
        <initializer>= Color::Red</initializer>
        <briefdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to paint the background. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="47" column="19" bodyfile="engine/include/core/render/RenderManager.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_render_manager_1a6c82dce6aa5933917e07ded8559461c5" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> *</type>
        <definition>Engine* RDE::RenderManager::engine</definition>
        <argsstring></argsstring>
        <name>engine</name>
        <qualifiedname>RDE::RenderManager::engine</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="52" column="20" bodyfile="engine/include/core/render/RenderManager.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a81c3e2e0601e8466e6b37a3625ea828f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RDE::RenderManager::RenderManager</definition>
        <argsstring>()</argsstring>
        <name>RenderManager</name>
        <qualifiedname>RDE::RenderManager::RenderManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="32" column="13" bodyfile="engine/include/core/render/RenderManager.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1ad184a1422fb32da8965655fe90397151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::resetDebugInfo</definition>
        <argsstring>()</argsstring>
        <name>resetDebugInfo</name>
        <qualifiedname>RDE::RenderManager::resetDebugInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="34" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1aa32fdb1f0beeed8be3e1dc32f469c1b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RDE::RenderManager::getTotalTriangles</definition>
        <argsstring>()</argsstring>
        <name>getTotalTriangles</name>
        <qualifiedname>RDE::RenderManager::getTotalTriangles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="35" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a7c416891b3ad8b13e5a5b4699b287cf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; int, int &gt;</type>
        <definition>std::tuple&lt; int, int &gt; RDE::RenderManager::getDrawCalls</definition>
        <argsstring>()</argsstring>
        <name>getDrawCalls</name>
        <qualifiedname>RDE::RenderManager::getDrawCalls</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="36" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a93d6bf6742076a727706ab7559f9c3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::setClearColor</definition>
        <argsstring>(const Color &amp;_color)</argsstring>
        <name>setClearColor</name>
        <qualifiedname>RDE::RenderManager::setClearColor</qualifiedname>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
        </param>
        <briefdescription>
<para>Sets the color to paint the background. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to paint the background </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="119" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a9f8eb1f48e04a2e9e4c86d53fe236fcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref></type>
        <definition>Color RDE::RenderManager::getClearColor</definition>
        <argsstring>()</argsstring>
        <name>getClearColor</name>
        <qualifiedname>RDE::RenderManager::getClearColor</qualifiedname>
        <briefdescription>
<para>Returns the current clear color. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="125" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a8a3503e9d48e3d2741017c5de81b9db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawPoint</definition>
        <argsstring>(const Vec2F &amp;_position, const Color &amp;_color=Color::White)</argsstring>
        <name>drawPoint</name>
        <qualifiedname>RDE::RenderManager::drawPoint</qualifiedname>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_position</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::White</defval>
        </param>
        <briefdescription>
<para>Draws a point at _position. MUST BE CALLED INSIDE A BLOCK OF beginDebugDraw/endDraw. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_position</parametername>
</parameternamelist>
<parameterdescription>
<para>Position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> of the line. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="132" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a03723445771102882acc575d6fa55257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawLine</definition>
        <argsstring>(const Vec2F &amp;_p0, const Vec2F &amp;_p1, const Color &amp;_color=Color::White)</argsstring>
        <name>drawLine</name>
        <qualifiedname>RDE::RenderManager::drawLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_p0</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_p1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::White</defval>
        </param>
        <briefdescription>
<para>Draws a line form P0 to P1. MUST BE CALLED INSIDE A BLOCK OF beginDebugDraw/endDraw. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_p0</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting point of the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>Ending point of the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> of the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_thickness</parametername>
</parameternamelist>
<parameterdescription>
<para>Thickness of the line. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="141" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1aef2ee711757cf558e81b6334fa5fc1e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawSquare</definition>
        <argsstring>(const Vec2F &amp;_position, const Vec2F &amp;_size, const Color &amp;_color=Color::White, float _rotation=0.f)</argsstring>
        <name>drawSquare</name>
        <qualifiedname>RDE::RenderManager::drawSquare</qualifiedname>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_position</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::White</defval>
        </param>
        <param>
          <type>float</type>
          <declname>_rotation</declname>
          <defval>0.f</defval>
        </param>
        <briefdescription>
<para>Draws a line form P0 to P1. MUST BE CALLED INSIDE A BLOCK OF beginDebugDraw/endDraw. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_position</parametername>
</parameternamelist>
<parameterdescription>
<para>Center position of the square. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the square. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> of the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation of the square. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="150" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a7d6ba0097cc1d33c5fabc03606eff8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawShape</definition>
        <argsstring>(DebugShape &amp;_shape)</argsstring>
        <name>drawShape</name>
        <qualifiedname>RDE::RenderManager::drawShape</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_debug_shape" kindref="compound">DebugShape</ref> &amp;</type>
          <declname>_shape</declname>
        </param>
        <briefdescription>
<para>Draws a shape. MUST BE CALLED INSIDE A BLOCK OF beginDebugDraw/endDraw. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Complex shape </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="156" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a98513a547e397dfe8f6b7c53fe281c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawGrid</definition>
        <argsstring>(const Color &amp;_color=Color::White)</argsstring>
        <name>drawGrid</name>
        <qualifiedname>RDE::RenderManager::drawGrid</qualifiedname>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::White</defval>
        </param>
        <briefdescription>
<para>Draws a grid on the screen. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> of the grid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="162" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a9eeccc8377f952b94660cb331554c123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::setLineThickness</definition>
        <argsstring>(float _thickness)</argsstring>
        <name>setLineThickness</name>
        <qualifiedname>RDE::RenderManager::setLineThickness</qualifiedname>
        <param>
          <type>float</type>
          <declname>_thickness</declname>
        </param>
        <briefdescription>
<para>Sets line thickness. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_thickness</parametername>
</parameternamelist>
<parameterdescription>
<para>Line thickness </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="168" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1ad55f03b421f6ad0663330564041504f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::setPointSize</definition>
        <argsstring>(float _size)</argsstring>
        <name>setPointSize</name>
        <qualifiedname>RDE::RenderManager::setPointSize</qualifiedname>
        <param>
          <type>float</type>
          <declname>_size</declname>
        </param>
        <briefdescription>
<para>Sets point size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Point size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="174" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a43fc9c767a29292dd2aff8e94db52288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::fillBackgroundCPUTexture</definition>
        <argsstring>(CPUTexture *_cpuTexture, const Color &amp;_color)</argsstring>
        <name>fillBackgroundCPUTexture</name>
        <qualifiedname>RDE::RenderManager::fillBackgroundCPUTexture</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref> *</type>
          <declname>_cpuTexture</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
        </param>
        <briefdescription>
<para>Fills the whole <ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref> with a specific color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_cpuTexture</parametername>
</parameternamelist>
<parameterdescription>
<para>The CPUTexutre to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to fill the whole <ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="181" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1ab27330327fa80ee38755ce77c368f2d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawPointToCPUTexture</definition>
        <argsstring>(CPUTexture *_cpuTexture, Transform *_cpuTextureTransform, const Vec2F &amp;_position, const Color &amp;_color=Color::Blue, int _size=1)</argsstring>
        <name>drawPointToCPUTexture</name>
        <qualifiedname>RDE::RenderManager::drawPointToCPUTexture</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref> *</type>
          <declname>_cpuTexture</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_cpuTextureTransform</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_position</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::Blue</defval>
        </param>
        <param>
          <type>int</type>
          <declname>_size</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draws a point on the <ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_cpuTexture</parametername>
</parameternamelist>
<parameterdescription>
<para>The CPUTexutre to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_position</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to draw the point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to draw the point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the point. Minimum is 1, this means that the pixel according to position will be filled and also 1 unit to each side. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="190" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a2c6cef39ea58130daad8104f8d02395e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawLineToCPUTexture</definition>
        <argsstring>(CPUTexture *_cpuTexture, Transform *_cpuTextureTransform, const Vec2F &amp;_p0, const Vec2F &amp;_p1, const Color &amp;_color=Color::Blue, int _thickness=1)</argsstring>
        <name>drawLineToCPUTexture</name>
        <qualifiedname>RDE::RenderManager::drawLineToCPUTexture</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref> *</type>
          <declname>_cpuTexture</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_cpuTextureTransform</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_p0</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_p1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::Blue</defval>
        </param>
        <param>
          <type>int</type>
          <declname>_thickness</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draws a line on the CPUTexure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_cpuTexture</parametername>
</parameternamelist>
<parameterdescription>
<para>The CPUTexutre to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_p0</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial position of the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>End position of the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to draw the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_thickness</parametername>
</parameternamelist>
<parameterdescription>
<para>Thickness of the line. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="200" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1ac770c2ccf9f970dd4aed13b1cf5b105c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawRectangleToCPUTexture</definition>
        <argsstring>(CPUTexture *_cpuTexture, Transform *_cpuTextureTransform, const Vec2F &amp;_position, const Vec2F &amp;_size, const Color &amp;_color=Color::Blue)</argsstring>
        <name>drawRectangleToCPUTexture</name>
        <qualifiedname>RDE::RenderManager::drawRectangleToCPUTexture</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref> *</type>
          <declname>_cpuTexture</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_cpuTextureTransform</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_position</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_size</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::Blue</defval>
        </param>
        <briefdescription>
<para>Draws a rectangle on the <ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_cpuTexture</parametername>
</parameternamelist>
<parameterdescription>
<para>The CPUTexutre to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_position</parametername>
</parameternamelist>
<parameterdescription>
<para>The centered position of the rectangle. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the rectangle. It will expando half of the size to each side from _position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to draw the rectangle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="209" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a423dad8acfb2c7a49aefa7f6715fff96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawFilledCircleToCPUTexture</definition>
        <argsstring>(CPUTexture *_cpuTexture, Transform *_cpuTextureTransform, const Vec2F &amp;_center, float _radius, const Color &amp;_color=Color::Blue)</argsstring>
        <name>drawFilledCircleToCPUTexture</name>
        <qualifiedname>RDE::RenderManager::drawFilledCircleToCPUTexture</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref> *</type>
          <declname>_cpuTexture</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_cpuTextureTransform</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_center</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_radius</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::Blue</defval>
        </param>
        <briefdescription>
<para>Draws a filled circle on the <ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_cpuTexture</parametername>
</parameternamelist>
<parameterdescription>
<para>The CPUTexutre to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center of the circle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>Radius of the circle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to draw the circle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="218" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1add2fb5f8a05fc744954508fc0b67340f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawLinedCircleToCPUTexture</definition>
        <argsstring>(CPUTexture *_cpuTexture, Transform *_cpuTextureTransform, const Vec2F &amp;_center, float _radius, const Color &amp;_color=Color::Blue, int _thickness=1)</argsstring>
        <name>drawLinedCircleToCPUTexture</name>
        <qualifiedname>RDE::RenderManager::drawLinedCircleToCPUTexture</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref> *</type>
          <declname>_cpuTexture</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_cpuTextureTransform</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_center</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_radius</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::Blue</defval>
        </param>
        <param>
          <type>int</type>
          <declname>_thickness</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draws the outline of a circle on the <ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_cpuTexture</parametername>
</parameternamelist>
<parameterdescription>
<para>The CPUTexutre to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center of the outline of the circle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>Radius of the outline of the circle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to draw the outline of the circle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_thickness</parametername>
</parameternamelist>
<parameterdescription>
<para>Thickness of the outline of the circle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="228" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a8badae7b83ae30b2f41ecae9c7497e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawTriangleToCPUTexture</definition>
        <argsstring>(CPUTexture *_cpuTexture, Transform *_cpuTextureTransform, const Vec2F &amp;_p0, const Vec2F &amp;_p1, const Vec2F &amp;_p2, const Color &amp;_color=Color::Blue)</argsstring>
        <name>drawTriangleToCPUTexture</name>
        <qualifiedname>RDE::RenderManager::drawTriangleToCPUTexture</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref> *</type>
          <declname>_cpuTexture</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_cpuTextureTransform</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_p0</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_p1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_p2</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::Blue</defval>
        </param>
        <briefdescription>
<para>Draws a triangle on the <ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_cpuTexture</parametername>
</parameternamelist>
<parameterdescription>
<para>The CPUTexutre to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_p0</parametername>
</parameternamelist>
<parameterdescription>
<para>First vertex of the triangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_p1</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vertex of the triangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_p2</parametername>
</parameternamelist>
<parameterdescription>
<para>Third vertex of the triangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to draw the triangle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="238" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a17b99eae6df7a12f5dd8fc92d6c42ce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawShapeToCPUTexture</definition>
        <argsstring>(CPUTexture *_cpuTexture, Transform *_cpuTextureTransform, std::vector&lt; Vec2F &gt; _points, const Color &amp;_color=Color::Blue)</argsstring>
        <name>drawShapeToCPUTexture</name>
        <qualifiedname>RDE::RenderManager::drawShapeToCPUTexture</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref> *</type>
          <declname>_cpuTexture</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_cpuTextureTransform</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &gt;</type>
          <declname>_points</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> &amp;</type>
          <declname>_color</declname>
          <defval>Color::Blue</defval>
        </param>
        <briefdescription>
<para>Draws a shape on the <ref refid="class_r_d_e_1_1_c_p_u_texture" kindref="compound">CPUTexture</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_cpuTexture</parametername>
</parameternamelist>
<parameterdescription>
<para>The CPUTexutre to modify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_points</parametername>
</parameternamelist>
<parameterdescription>
<para>List of the vertices of the shape. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_color" kindref="compound">Color</ref> to draw the shape. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="246" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a0789aa5314b9c618778d9572b6818a74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::init</definition>
        <argsstring>(Engine *_engine)</argsstring>
        <name>init</name>
        <qualifiedname>RDE::RenderManager::init</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> *</type>
          <declname>_engine</declname>
        </param>
        <briefdescription>
<para>Must be called ONCE before rendering anything, BUT after creating the window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This is not meant to be called by end-users. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="59" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a8358ff0ea2bc2df08a81b22e0ba93838" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>RDE::RenderManager::destroy</qualifiedname>
        <briefdescription>
<para>Destroys all related data to the GPU. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This is not meant to be called by end-users. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="65" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a779f5d95c469406faf9d5f6d0e17f90d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>RDE::RenderManager::clear</qualifiedname>
        <briefdescription>
<para>This must be called before any drawBatched call on every frame (in main loop). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_color</parametername>
</parameternamelist>
<parameterdescription>
<para>The color of the background </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="71" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a45c151c2ddd6142b8c6367558af022ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::resetBuffers</definition>
        <argsstring>()</argsstring>
        <name>resetBuffers</name>
        <qualifiedname>RDE::RenderManager::resetBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="73" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a541d2aaf88fccb8e9e72818c066a5631" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::beginDraw</definition>
        <argsstring>(Camera *_camera, Transform *_cameraTransform)</argsstring>
        <name>beginDraw</name>
        <qualifiedname>RDE::RenderManager::beginDraw</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_camera" kindref="compound">Camera</ref> *</type>
          <declname>_camera</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_cameraTransform</declname>
        </param>
        <briefdescription>
<para>Renders textures, sprites... It includes 2D batching for a much more performant drawing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_camera</parametername>
</parameternamelist>
<parameterdescription>
<para>It is the main camera of the scene (or other camera if a special drawing is needed). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_renderShader</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader we want to use to render, by default the basic one. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="81" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1ab17d543e028fa185d366b7143d04fc04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::beginDebugDraw</definition>
        <argsstring>(Camera *_camera, Transform *_cameraTransform, float _thickness=1.f)</argsstring>
        <name>beginDebugDraw</name>
        <qualifiedname>RDE::RenderManager::beginDebugDraw</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_camera" kindref="compound">Camera</ref> *</type>
          <declname>_camera</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_cameraTransform</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_thickness</declname>
          <defval>1.f</defval>
        </param>
        <briefdescription>
<para>Renders geometry for debugging. It also includes batching. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_camera</parametername>
</parameternamelist>
<parameterdescription>
<para>It is the main camera of the scene (or other camera if a special drawing is needed). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_renderShader</parametername>
</parameternamelist>
<parameterdescription>
<para>The shader we want to use to render, by default the debugging one. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="88" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1ab500d7ec0f7b08b31c395270e7bcce60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawSpriteRenderer</definition>
        <argsstring>(RenderizableInnerData &amp;_innerData, Transform *_transform)</argsstring>
        <name>drawSpriteRenderer</name>
        <qualifiedname>RDE::RenderManager::drawSpriteRenderer</qualifiedname>
        <param>
          <type><ref refid="struct_r_d_e_1_1_renderizable_inner_data" kindref="compound">RenderizableInnerData</ref> &amp;</type>
          <declname>_innerData</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_transform</declname>
        </param>
        <briefdescription>
<para>Renders an IRenderizable using batching. MUST BE CALLED INSIDE A BLOCK OF beginDraw/endDraw. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_renderizable</parametername>
</parameternamelist>
<parameterdescription>
<para>Component derived from IRenderizable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Nine patch&apos;s transform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="95" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1ad3bce4821ad978a341eb322b19b5a9ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawTextRenderer</definition>
        <argsstring>(RenderizableInnerData &amp;_innerData, Transform *_transform)</argsstring>
        <name>drawTextRenderer</name>
        <qualifiedname>RDE::RenderManager::drawTextRenderer</qualifiedname>
        <param>
          <type><ref refid="struct_r_d_e_1_1_renderizable_inner_data" kindref="compound">RenderizableInnerData</ref> &amp;</type>
          <declname>_innerData</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="96" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1a4cbcc79e434149fc44cfb05da705f963" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::drawUI</definition>
        <argsstring>(std::vector&lt; Batch &gt; &amp;_batches)</argsstring>
        <name>drawUI</name>
        <qualifiedname>RDE::RenderManager::drawUI</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="class_r_d_e_1_1_batch" kindref="compound">Batch</ref> &gt; &amp;</type>
          <declname>_batches</declname>
        </param>
        <briefdescription>
<para>Renders an IRenderizable immediately with no batching. MUST BE CALLED INSIDE A BLOCK OF beginDraw/endDraw. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_batches</parametername>
</parameternamelist>
<parameterdescription>
<para>Static batches to render. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="102" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1ab784fc0ed6a648bde066168d6f9841e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::endDraw</definition>
        <argsstring>()</argsstring>
        <name>endDraw</name>
        <qualifiedname>RDE::RenderManager::endDraw</qualifiedname>
        <briefdescription>
<para>Sends the data batched to the GPU, must be called after beginDraw and what we want to render. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="107" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_render_manager_1aae5b68502409b77a4a832e8708f43153" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::RenderManager::endDebugDraw</definition>
        <argsstring>()</argsstring>
        <name>endDebugDraw</name>
        <qualifiedname>RDE::RenderManager::endDebugDraw</qualifiedname>
        <briefdescription>
<para>Sends the debug data batched to the GPU, must be called after beginDebugDraw and what we want to render. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/RenderManager.h" line="112" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="engine/include/core/render/RenderManager.h" line="22" column="5" bodyfile="engine/include/core/render/RenderManager.h" bodystart="22" bodyend="247"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_render_manager_1a22d3bca812f79c529beae44af4d2114f" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>batch</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1ab17d543e028fa185d366b7143d04fc04" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>beginDebugDraw</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a541d2aaf88fccb8e9e72818c066a5631" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>beginDraw</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a9816083e25bae0b2f472e19382136687" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>Canvas</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a779f5d95c469406faf9d5f6d0e17f90d" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>clear</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1aa8388a2e65396efd0350d76dd9773c73" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>clearColor</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a8358ff0ea2bc2df08a81b22e0ba93838" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>destroy</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a423dad8acfb2c7a49aefa7f6715fff96" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawFilledCircleToCPUTexture</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a98513a547e397dfe8f6b7c53fe281c64" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawGrid</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a03723445771102882acc575d6fa55257" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawLine</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1add2fb5f8a05fc744954508fc0b67340f" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawLinedCircleToCPUTexture</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a2c6cef39ea58130daad8104f8d02395e" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawLineToCPUTexture</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a8a3503e9d48e3d2741017c5de81b9db8" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawPoint</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1ab27330327fa80ee38755ce77c368f2d5" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawPointToCPUTexture</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1ac770c2ccf9f970dd4aed13b1cf5b105c" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawRectangleToCPUTexture</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a7d6ba0097cc1d33c5fabc03606eff8b1" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawShape</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a17b99eae6df7a12f5dd8fc92d6c42ce9" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawShapeToCPUTexture</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1ab500d7ec0f7b08b31c395270e7bcce60" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawSpriteRenderer</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1aef2ee711757cf558e81b6334fa5fc1e8" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawSquare</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1ad3bce4821ad978a341eb322b19b5a9ad" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawTextRenderer</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a8badae7b83ae30b2f41ecae9c7497e27" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawTriangleToCPUTexture</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a4cbcc79e434149fc44cfb05da705f963" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>drawUI</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1aae5b68502409b77a4a832e8708f43153" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>endDebugDraw</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1ab784fc0ed6a648bde066168d6f9841e0" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>endDraw</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a6c82dce6aa5933917e07ded8559461c5" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>engine</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a3e1914489e4bed4f9f23cdeab34a43dc" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>Engine</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a43fc9c767a29292dd2aff8e94db52288" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>fillBackgroundCPUTexture</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a7e815028687ed9f9e9e25851d8a17b27" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>FrameBuffer</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a9f8eb1f48e04a2e9e4c86d53fe236fcc" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>getClearColor</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a7c416891b3ad8b13e5a5b4699b287cf7" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>getDrawCalls</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1aa32fdb1f0beeed8be3e1dc32f469c1b7" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>getTotalTriangles</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1af4f241a517f779b649085b1b171a83b1" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>ImGuiScene</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a0789aa5314b9c618778d9572b6818a74" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>init</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1adddd5c43ff870a047aa66db4edf82a7e" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>Manager</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a81c3e2e0601e8466e6b37a3625ea828f" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>RenderManager</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a45c151c2ddd6142b8c6367558af022ec" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>resetBuffers</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1ad184a1422fb32da8965655fe90397151" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>resetDebugInfo</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" virt="non-virtual"><scope>RDE::RenderManager</scope><name>Scene</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a93d6bf6742076a727706ab7559f9c3ea" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>setClearColor</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1a9eeccc8377f952b94660cb331554c123" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>setLineThickness</name></member>
      <member refid="class_r_d_e_1_1_render_manager_1ad55f03b421f6ad0663330564041504f3" prot="public" virt="non-virtual"><scope>RDE::RenderManager</scope><name>setPointSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
