<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_canvas" kind="class" language="C++" prot="public">
    <compoundname>RDE::Canvas</compoundname>
    <includes refid="_canvas_8h" local="no">Canvas.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_r_d_e_1_1_canvas_1afab89afd724f1b07b1aaad6bdc61c47a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Graph</definition>
        <argsstring></argsstring>
        <name>Graph</name>
        <qualifiedname>RDE::Canvas::Graph</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_graph" kindref="compound">Graph</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="43" column="22" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_r_d_e_1_1_canvas_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Scene</definition>
        <argsstring></argsstring>
        <name>Scene</name>
        <qualifiedname>RDE::Canvas::Scene</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_scene" kindref="compound">Scene</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="44" column="22" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1aa4eace34c28bc3cd65c94b0073659b11" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_scene" kindref="compound">Scene</ref> *</type>
        <definition>Scene* RDE::Canvas::scene</definition>
        <argsstring></argsstring>
        <name>scene</name>
        <qualifiedname>RDE::Canvas::scene</qualifiedname>
        <briefdescription>
<para><ref refid="class_r_d_e_1_1_scene" kindref="compound">Scene</ref> this canvas is attached to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="50" column="19" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1a0196d2d61a3e34ae4b89f467b07103fd" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_camera" kindref="compound">Camera</ref> *</type>
        <definition>Camera* RDE::Canvas::camera</definition>
        <argsstring></argsstring>
        <name>camera</name>
        <qualifiedname>RDE::Canvas::camera</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para><ref refid="class_r_d_e_1_1_camera" kindref="compound">Camera</ref> that renders the <ref refid="class_r_d_e_1_1_canvas" kindref="compound">Canvas</ref> elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="55" column="20" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1ac5f658b881245b4716d726aee66d3f67" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int RDE::Canvas::layer</definition>
        <argsstring></argsstring>
        <name>layer</name>
        <qualifiedname>RDE::Canvas::layer</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Layer of the canvas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="60" column="17" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1a63801d65abc6aa62c1c806e5edebfb3f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_r_d_e_1_1_batch" kindref="compound">Batch</ref> &gt;</type>
        <definition>std::vector&lt;Batch&gt; RDE::Canvas::batches</definition>
        <argsstring></argsstring>
        <name>batches</name>
        <qualifiedname>RDE::Canvas::batches</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="62" column="25" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1ae088540de12dfcd862192c79e5973736" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RDE::Canvas::dirty</definition>
        <argsstring></argsstring>
        <name>dirty</name>
        <qualifiedname>RDE::Canvas::dirty</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="63" column="18" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1a274cc5e600a905458eb076bb54caf75d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int RDE::Canvas::maxIndicesPerDrawCall</definition>
        <argsstring></argsstring>
        <name>maxIndicesPerDrawCall</name>
        <qualifiedname>RDE::Canvas::maxIndicesPerDrawCall</qualifiedname>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="64" column="17" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1a3c16b1fee2b66627499fc8daa906c65e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_r_d_e_1_1_canvas_element" kindref="compound">CanvasElement</ref> &gt;</type>
        <definition>std::vector&lt;CanvasElement&gt; RDE::Canvas::uiRenderizables</definition>
        <argsstring></argsstring>
        <name>uiRenderizables</name>
        <qualifiedname>RDE::Canvas::uiRenderizables</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="66" column="25" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1a38d986213cb74945a78f774f4eeac22e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_r_d_e_1_1_canvas_element" kindref="compound">CanvasElement</ref> &gt;</type>
        <definition>std::vector&lt;CanvasElement&gt; RDE::Canvas::uiInteractables</definition>
        <argsstring></argsstring>
        <name>uiInteractables</name>
        <qualifiedname>RDE::Canvas::uiInteractables</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="67" column="25" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1a12bea55f4d823360a392be9af5308097" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_r_d_e_1_1_canvas_element" kindref="compound">CanvasElement</ref> &gt;</type>
        <definition>std::vector&lt;CanvasElement&gt; RDE::Canvas::uiUpdatables</definition>
        <argsstring></argsstring>
        <name>uiUpdatables</name>
        <qualifiedname>RDE::Canvas::uiUpdatables</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="68" column="25" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_canvas_1a303a9a1827ad6b79c1ea6d3beb40a608" prot="public" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_graph" kindref="compound">Graph</ref> *</type>
        <definition>Graph* RDE::Canvas::graph</definition>
        <argsstring></argsstring>
        <name>graph</name>
        <qualifiedname>RDE::Canvas::graph</qualifiedname>
        <briefdescription>
<para>Returns the inner container <ref refid="class_r_d_e_1_1_graph" kindref="compound">Graph</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Graph* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="75" column="19" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1a39d6d2d435be109b1b35ff00782dff8f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>RDE::Canvas::Canvas</definition>
        <argsstring>(Scene *_scene, const Window *_window, const std::string &amp;_canvasTag)</argsstring>
        <name>Canvas</name>
        <qualifiedname>RDE::Canvas::Canvas</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_scene" kindref="compound">Scene</ref> *</type>
          <declname>_scene</declname>
        </param>
        <param>
          <type>const <ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>_window</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_canvasTag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="78" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1a43554ce9a648a719db51c7c45ce46f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RDE::Canvas::~Canvas</definition>
        <argsstring>()</argsstring>
        <name>~Canvas</name>
        <qualifiedname>RDE::Canvas::~Canvas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="79" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1ab42a0ab61b14cc83c565a3b1cc08372f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_r_d_e_1_1_camera" kindref="compound">Camera</ref> *</type>
        <definition>Camera * RDE::Canvas::getCamera</definition>
        <argsstring>()</argsstring>
        <name>getCamera</name>
        <qualifiedname>RDE::Canvas::getCamera</qualifiedname>
        <briefdescription>
<para>Gets the rendering <ref refid="class_r_d_e_1_1_camera" kindref="compound">Camera</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Camera* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="85" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1a55efefebaa70ad0dbfbb02a72ba2f04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Canvas::onResize</definition>
        <argsstring>(uint _width, uint _height)</argsstring>
        <name>onResize</name>
        <qualifiedname>RDE::Canvas::onResize</qualifiedname>
        <param>
          <type>uint</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="87" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1a12ac08b3c809e9d72581ec5a9b6e92f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Canvas::setCanvasResolution</definition>
        <argsstring>(const Vec2I &amp;_resolution)</argsstring>
        <name>setCanvasResolution</name>
        <qualifiedname>RDE::Canvas::setCanvasResolution</qualifiedname>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref> &amp;</type>
          <declname>_resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="89" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1a92d7b5be44e8d0bf48ac93bad1b5fe73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref></type>
        <definition>Vec2I RDE::Canvas::getCanvasResolution</definition>
        <argsstring>()</argsstring>
        <name>getCanvasResolution</name>
        <qualifiedname>RDE::Canvas::getCanvasResolution</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="91" column="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1aff1be3102aa6a143dd8dd3f7b7638a7d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Canvas::batchTreeElementPre</definition>
        <argsstring>(CanvasElement *_canvasElement, void *_data)</argsstring>
        <name>batchTreeElementPre</name>
        <qualifiedname>RDE::Canvas::batchTreeElementPre</qualifiedname>
        <param>
          <type><ref refid="struct_r_d_e_1_1_canvas_element" kindref="compound">CanvasElement</ref> *</type>
          <declname>_canvasElement</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="94" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1a60d51aa83df570f6c5cb7731b11f42bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Canvas::batchTreeElementPost</definition>
        <argsstring>(CanvasElement *_canvasElement, void *_data)</argsstring>
        <name>batchTreeElementPost</name>
        <qualifiedname>RDE::Canvas::batchTreeElementPost</qualifiedname>
        <param>
          <type><ref refid="struct_r_d_e_1_1_canvas_element" kindref="compound">CanvasElement</ref> *</type>
          <declname>_canvasElement</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="95" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1aabc7c9dd3ae138900d246ff90fc2d92d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Canvas::getRenderizable</definition>
        <argsstring>(Node *_node, CanvasElement *_canvasElement)</argsstring>
        <name>getRenderizable</name>
        <qualifiedname>RDE::Canvas::getRenderizable</qualifiedname>
        <param>
          <type><ref refid="struct_r_d_e_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>_node</declname>
        </param>
        <param>
          <type><ref refid="struct_r_d_e_1_1_canvas_element" kindref="compound">CanvasElement</ref> *</type>
          <declname>_canvasElement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="97" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1a7a322166de0d727dfcb238c6f71fc3e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Canvas::getUpdatable</definition>
        <argsstring>(Node *_node, CanvasElement *_canvasElement)</argsstring>
        <name>getUpdatable</name>
        <qualifiedname>RDE::Canvas::getUpdatable</qualifiedname>
        <param>
          <type><ref refid="struct_r_d_e_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>_node</declname>
        </param>
        <param>
          <type><ref refid="struct_r_d_e_1_1_canvas_element" kindref="compound">CanvasElement</ref> *</type>
          <declname>_canvasElement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="98" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1aa5496ee9834aa534d14ee52b2c0429fc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Canvas::forceRender</definition>
        <argsstring>()</argsstring>
        <name>forceRender</name>
        <qualifiedname>RDE::Canvas::forceRender</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="100" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_canvas_1a79a98b067b42ca34aae840cac23c733c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Canvas::postRenderSync</definition>
        <argsstring>()</argsstring>
        <name>postRenderSync</name>
        <qualifiedname>RDE::Canvas::postRenderSync</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/uiSystem/Canvas.h" line="102" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a container for elements related to the UI and it is in charge of render them, update them... A <ref refid="class_r_d_e_1_1_scene" kindref="compound">Scene</ref> can have multiple canvas. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>RDE::Canvas</label>
        <link refid="class_r_d_e_1_1_canvas"/>
        <childnode refid="2" relation="usage">
          <edgelabel>graph</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>RDE::Graph</label>
        <link refid="class_r_d_e_1_1_graph"/>
        <childnode refid="3" relation="usage">
          <edgelabel>onEventDel</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>RDE::UniqueDelegate&lt; void(NodeContainer &amp;, RDE::Event &amp;)&gt;</label>
        <link refid="struct_r_d_e_1_1_unique_delegate"/>
      </node>
    </collaborationgraph>
    <location file="engine/include/core/systems/uiSystem/Canvas.h" line="42" column="5" bodyfile="engine/include/core/systems/uiSystem/Canvas.h" bodystart="42" bodyend="103"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_canvas_1a63801d65abc6aa62c1c806e5edebfb3f" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>batches</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a60d51aa83df570f6c5cb7731b11f42bd" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>batchTreeElementPost</name></member>
      <member refid="class_r_d_e_1_1_canvas_1aff1be3102aa6a143dd8dd3f7b7638a7d" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>batchTreeElementPre</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a0196d2d61a3e34ae4b89f467b07103fd" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>camera</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a39d6d2d435be109b1b35ff00782dff8f" prot="public" virt="non-virtual"><scope>RDE::Canvas</scope><name>Canvas</name></member>
      <member refid="class_r_d_e_1_1_canvas_1ae088540de12dfcd862192c79e5973736" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>dirty</name></member>
      <member refid="class_r_d_e_1_1_canvas_1aa5496ee9834aa534d14ee52b2c0429fc" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>forceRender</name></member>
      <member refid="class_r_d_e_1_1_canvas_1ab42a0ab61b14cc83c565a3b1cc08372f" prot="public" virt="non-virtual"><scope>RDE::Canvas</scope><name>getCamera</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a92d7b5be44e8d0bf48ac93bad1b5fe73" prot="public" virt="non-virtual"><scope>RDE::Canvas</scope><name>getCanvasResolution</name></member>
      <member refid="class_r_d_e_1_1_canvas_1aabc7c9dd3ae138900d246ff90fc2d92d" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>getRenderizable</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a7a322166de0d727dfcb238c6f71fc3e0" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>getUpdatable</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a303a9a1827ad6b79c1ea6d3beb40a608" prot="public" virt="non-virtual"><scope>RDE::Canvas</scope><name>graph</name></member>
      <member refid="class_r_d_e_1_1_canvas_1afab89afd724f1b07b1aaad6bdc61c47a" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>Graph</name></member>
      <member refid="class_r_d_e_1_1_canvas_1ac5f658b881245b4716d726aee66d3f67" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>layer</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a274cc5e600a905458eb076bb54caf75d" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>maxIndicesPerDrawCall</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a55efefebaa70ad0dbfbb02a72ba2f04c" prot="public" virt="non-virtual"><scope>RDE::Canvas</scope><name>onResize</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a79a98b067b42ca34aae840cac23c733c" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>postRenderSync</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>Scene</name></member>
      <member refid="class_r_d_e_1_1_canvas_1aa4eace34c28bc3cd65c94b0073659b11" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>scene</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a12ac08b3c809e9d72581ec5a9b6e92f2" prot="public" virt="non-virtual"><scope>RDE::Canvas</scope><name>setCanvasResolution</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a38d986213cb74945a78f774f4eeac22e" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>uiInteractables</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a3c16b1fee2b66627499fc8daa906c65e" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>uiRenderizables</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a12bea55f4d823360a392be9af5308097" prot="private" virt="non-virtual"><scope>RDE::Canvas</scope><name>uiUpdatables</name></member>
      <member refid="class_r_d_e_1_1_canvas_1a43554ce9a648a719db51c7c45ce46f34" prot="public" virt="non-virtual"><scope>RDE::Canvas</scope><name>~Canvas</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
