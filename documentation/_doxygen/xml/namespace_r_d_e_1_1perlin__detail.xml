<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespace_r_d_e_1_1perlin__detail" kind="namespace" language="C++">
    <compoundname>RDE::perlin_detail</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="_perlin_noise_8h_1a361a7641c18466695912b1323c711410" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class URBG</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::conjunction_v&lt; std::is_invocable&lt; URBG &amp; &gt;, std::is_unsigned&lt; std::invoke_result_t&lt; URBG &amp; &gt; &gt; &gt; &gt; *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>std::uint64_t</type>
        <definition>std::uint64_t RDE::perlin_detail::Random</definition>
        <argsstring>(const std::uint64_t max, URBG &amp;&amp;urbg)</argsstring>
        <name>Random</name>
        <qualifiedname>RDE::perlin_detail::Random</qualifiedname>
        <param>
          <type>const std::uint64_t</type>
          <declname>max</declname>
        </param>
        <param>
          <type>URBG &amp;&amp;</type>
          <declname>urbg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="260" column="30" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="260" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1a0d46538ee99c3b51146839fe329d4674" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RandomIt</type>
          </param>
          <param>
            <type>class URBG</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void RDE::perlin_detail::Shuffle</definition>
        <argsstring>(RandomIt first, RandomIt last, URBG &amp;&amp;urbg)</argsstring>
        <name>Shuffle</name>
        <qualifiedname>RDE::perlin_detail::Shuffle</qualifiedname>
        <param>
          <type>RandomIt</type>
          <declname>first</declname>
        </param>
        <param>
          <type>RandomIt</type>
          <declname>last</declname>
        </param>
        <param>
          <type>URBG &amp;&amp;</type>
          <declname>urbg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="266" column="21" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="266" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1af23f8650ce4b91d7a412f803fd27941f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>constexpr Float</type>
        <definition>constexpr Float RDE::perlin_detail::Fade</definition>
        <argsstring>(const Float t) noexcept</argsstring>
        <name>Fade</name>
        <qualifiedname>RDE::perlin_detail::Fade</qualifiedname>
        <param>
          <type>const Float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="286" column="32" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1ab919efa060bc9c902653e97746263b31" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>constexpr Float</type>
        <definition>constexpr Float RDE::perlin_detail::Lerp</definition>
        <argsstring>(const Float a, const Float b, const Float t) noexcept</argsstring>
        <name>Lerp</name>
        <qualifiedname>RDE::perlin_detail::Lerp</qualifiedname>
        <param>
          <type>const Float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const Float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const Float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="293" column="32" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1a531f63dd4c088c68ea6ef424c621e0da" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>constexpr Float</type>
        <definition>constexpr Float RDE::perlin_detail::Grad</definition>
        <argsstring>(const std::uint8_t hash, const Float x, const Float y, const Float z) noexcept</argsstring>
        <name>Grad</name>
        <qualifiedname>RDE::perlin_detail::Grad</qualifiedname>
        <param>
          <type>const std::uint8_t</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const Float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const Float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="300" column="32" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="300" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1a7c2447b8f20754e42d5480fc61b05613" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>constexpr Float</type>
        <definition>constexpr Float RDE::perlin_detail::Remap_01</definition>
        <argsstring>(const Float x) noexcept</argsstring>
        <name>Remap_01</name>
        <qualifiedname>RDE::perlin_detail::Remap_01</qualifiedname>
        <param>
          <type>const Float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="310" column="32" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1af0d71a08eb32726283e31d0ace13dfde" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>constexpr Float</type>
        <definition>constexpr Float RDE::perlin_detail::Clamp_11</definition>
        <argsstring>(const Float x) noexcept</argsstring>
        <name>Clamp_11</name>
        <qualifiedname>RDE::perlin_detail::Clamp_11</qualifiedname>
        <param>
          <type>const Float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="317" column="32" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1ad41fa2b994cc83b7b5b42e575660ab0b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>constexpr Float</type>
        <definition>constexpr Float RDE::perlin_detail::RemapClamp_01</definition>
        <argsstring>(const Float x) noexcept</argsstring>
        <name>RemapClamp_01</name>
        <qualifiedname>RDE::perlin_detail::RemapClamp_01</qualifiedname>
        <param>
          <type>const Float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="324" column="32" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="324" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1a5c84ab7f97a8e00ed13006e31c6f28e7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Noise</type>
          </param>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto RDE::perlin_detail::Octave1D</definition>
        <argsstring>(const Noise &amp;noise, Float x, const std::int32_t octaves, const Float persistence) noexcept</argsstring>
        <name>Octave1D</name>
        <qualifiedname>RDE::perlin_detail::Octave1D</qualifiedname>
        <param>
          <type>const Noise &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type>Float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::int32_t</type>
          <declname>octaves</declname>
        </param>
        <param>
          <type>const Float</type>
          <declname>persistence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="340" column="21" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="340" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1a883987ca1b7e9935a15a284a9fc5893a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Noise</type>
          </param>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto RDE::perlin_detail::Octave2D</definition>
        <argsstring>(const Noise &amp;noise, Float x, Float y, const std::int32_t octaves, const Float persistence) noexcept</argsstring>
        <name>Octave2D</name>
        <qualifiedname>RDE::perlin_detail::Octave2D</qualifiedname>
        <param>
          <type>const Noise &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type>Float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const std::int32_t</type>
          <declname>octaves</declname>
        </param>
        <param>
          <type>const Float</type>
          <declname>persistence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="358" column="21" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="358" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1a00a28743cffa1f81687ef31466b8c9d8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Noise</type>
          </param>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto RDE::perlin_detail::Octave3D</definition>
        <argsstring>(const Noise &amp;noise, Float x, Float y, Float z, const std::int32_t octaves, const Float persistence) noexcept</argsstring>
        <name>Octave3D</name>
        <qualifiedname>RDE::perlin_detail::Octave3D</qualifiedname>
        <param>
          <type>const Noise &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type>Float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>Float</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const std::int32_t</type>
          <declname>octaves</declname>
        </param>
        <param>
          <type>const Float</type>
          <declname>persistence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="377" column="21" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="377" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="_perlin_noise_8h_1a91ce478f343b685f315e4ed8980c8042" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Float</type>
          </param>
        </templateparamlist>
        <type>constexpr Float</type>
        <definition>constexpr Float RDE::perlin_detail::MaxAmplitude</definition>
        <argsstring>(const std::int32_t octaves, const Float persistence) noexcept</argsstring>
        <name>MaxAmplitude</name>
        <qualifiedname>RDE::perlin_detail::MaxAmplitude</qualifiedname>
        <param>
          <type>const std::int32_t</type>
          <declname>octaves</declname>
        </param>
        <param>
          <type>const Float</type>
          <declname>persistence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/util/PerlinNoise.h" line="397" column="32" bodyfile="engine/include/core/util/PerlinNoise.h" bodystart="397" bodyend="410"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="engine/include/core/util/PerlinNoise.h" line="251" column="5"/>
  </compounddef>
</doxygen>
