<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_event" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>RDE::Event</compoundname>
    <derivedcompoundref refid="class_r_d_e_1_1_controller_axis_moved_event" prot="public" virt="non-virtual">RDE::ControllerAxisMovedEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_controller_button_down_event" prot="public" virt="non-virtual">RDE::ControllerButtonDownEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_controller_button_up_event" prot="public" virt="non-virtual">RDE::ControllerButtonUpEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_key_event" prot="public" virt="non-virtual">RDE::KeyEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_mobile_touch_down_event" prot="public" virt="non-virtual">RDE::MobileTouchDownEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_mobile_touch_moved_event" prot="public" virt="non-virtual">RDE::MobileTouchMovedEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_mobile_touch_up_event" prot="public" virt="non-virtual">RDE::MobileTouchUpEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_mouse_button_event" prot="public" virt="non-virtual">RDE::MouseButtonEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_mouse_moved_event" prot="public" virt="non-virtual">RDE::MouseMovedEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_mouse_scrolled_event" prot="public" virt="non-virtual">RDE::MouseScrolledEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_window_closed_event" prot="public" virt="non-virtual">RDE::WindowClosedEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_window_display_changed_event" prot="public" virt="non-virtual">RDE::WindowDisplayChangedEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_window_frame_event" prot="public" virt="non-virtual">RDE::WindowFrameEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_window_minimized_event" prot="public" virt="non-virtual">RDE::WindowMinimizedEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_window_moved_event" prot="public" virt="non-virtual">RDE::WindowMovedEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_window_render_event" prot="public" virt="non-virtual">RDE::WindowRenderEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_window_resized_event" prot="public" virt="non-virtual">RDE::WindowResizedEvent</derivedcompoundref>
    <derivedcompoundref refid="class_r_d_e_1_1_window_update_event" prot="public" virt="non-virtual">RDE::WindowUpdateEvent</derivedcompoundref>
    <includes refid="_event_8h" local="no">Event.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_event_1a372a2b0c1a05c7f8b7e48bfbac7042d0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RDE::Event::handled</definition>
        <argsstring></argsstring>
        <name>handled</name>
        <qualifiedname>RDE::Event::handled</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>If the event has been handled or not. If not, it will be propagated to deeper Nodes that want to listen and handle this event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/Event.h" line="54" column="18" bodyfile="engine/include/core/systems/eventSystem/Event.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_r_d_e_1_1_event_1a5c2348312219e998d3c5e0cdc916bbc6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_r_d_e_1af739ab5b6aed02ef5ab138f6f9ebe912" kindref="member">EventType</ref></type>
        <definition>static EventType RDE::Event::getStaticType</definition>
        <argsstring>()</argsstring>
        <name>getStaticType</name>
        <qualifiedname>RDE::Event::getStaticType</qualifiedname>
        <briefdescription>
<para>Returns the type of an event in a static way. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>EventType </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/Event.h" line="61" column="30" bodyfile="engine/include/core/systems/eventSystem/Event.h" bodystart="61" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_event_1a17812fdef1f1bc1517e7658cbdf8ba3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_r_d_e_1af739ab5b6aed02ef5ab138f6f9ebe912" kindref="member">EventType</ref></type>
        <definition>virtual EventType RDE::Event::getEventType</definition>
        <argsstring>() const =0</argsstring>
        <name>getEventType</name>
        <qualifiedname>RDE::Event::getEventType</qualifiedname>
        <reimplementedby refid="class_r_d_e_1_1_controller_axis_moved_event_1ab0fc21dd3fb9e3108c53dfbfa6024759">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_controller_button_down_event_1a85c174b30a3e0b4b951bd3a52bdfdb91">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_controller_button_up_event_1a30c54968d9e1f011a922d10b6b72f8aa">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_pressed_event_1abbf71b55d16e391fa89e290d773a1d4b">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_typed_event_1a72ed09614d6c4a0a4cfe4f98a7c51fb8">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_released_event_1ac02fde366e96a2aff793fc76ea43783d">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_text_typed_event_1ad3e8988140cf0292880530717edbc9f7">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_down_event_1a17e72bca4ba3d89757c0abe8550747ae">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_up_event_1ae4d58f9f12eb246291b7590dbcf1bf9d">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_moved_event_1a7f144e4102e699cba6c02cceeaa6e548">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_moved_event_1a7a137482104a372acf34742e33c7b957">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_scrolled_event_1a59c8a95691299e43aa4150a2542d8464">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_button_pressed_event_1ae282d8325da0204046cf891c129d105e">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_button_released_event_1ab64dce64e5b78aa0626b3581fa605dcb">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_resized_event_1a380d8378e87a2b6aa974bc5a65a60c50">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_moved_event_1aef145e306c8624eca3e385a7f9ce82c5">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_display_changed_event_1a184346a0b010b69a244ddfe8e6977bca">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_minimized_event_1a8d2def6759fc60be35a28cecf2ed3e28">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_closed_event_1a2d440bc81aecb388f6fb9c03a9dfc759">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_frame_event_1a2da3cf7a5d4236de8eebd6f02bd6ebe9">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_update_event_1aa40dcadfe69a99c35a093692691e2ebd">getEventType</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_render_event_1ac607703f8384990f7016d9baa3f1d04d">getEventType</reimplementedby>
        <briefdescription>
<para>Returns the event type from the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>EventType </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/Event.h" line="67" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_event_1a3ea36fb9accc90c88c34d946515724a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const char *</type>
        <definition>virtual const char * RDE::Event::getName</definition>
        <argsstring>() const =0</argsstring>
        <name>getName</name>
        <qualifiedname>RDE::Event::getName</qualifiedname>
        <reimplementedby refid="class_r_d_e_1_1_controller_axis_moved_event_1adcfb33ddc02ab1c9fdc293cdb11e017b">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_controller_button_down_event_1a44818b6022e996c140beb241967e026e">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_controller_button_up_event_1a9990f415e84ba589fbd0d1eb9ce92b0e">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_pressed_event_1afd2037c8e878ab0b59d08f0b60daaee2">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_typed_event_1ad05113ebe41c6fe11fb1d95ddffa5507">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_released_event_1aa03fa16e20920bb0e0036471d6b7976e">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_text_typed_event_1a411d034b22aee666ae634d6ca31f6903">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_down_event_1ab6b0cf9d6153aae10334505e389f803a">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_up_event_1a9e5e35020b184d456e212448ca5ae024">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_moved_event_1a2d312eaaf48370d153c67e299b6b1111">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_moved_event_1ad9f96d545af7d9755bd4b597cd665180">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_scrolled_event_1ad9fc47d7cbfba141f898219d436e67cc">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_button_pressed_event_1a210674f2d025912cd520363692460eb7">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_button_released_event_1a16f4b4546c97350653d35b5d346bdbbb">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_resized_event_1a4bb961282e079dc9060e3e3e21e61feb">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_moved_event_1a6e766fcc0e210ec34df4729c67e97e96">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_display_changed_event_1a82dbe50b0d05a36ccd1fe961cad7e110">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_minimized_event_1a72bf610d15014481e6fd803b0abcdc69">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_closed_event_1a24f187bf698717e45409b9db511c02ad">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_frame_event_1ac161a62a5803a491b1bf5440770cbc06">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_update_event_1a909a03437b1d8e977ca787133ec84aa1">getName</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_render_event_1ad70ce63974bab6a072c91110d3bde54a">getName</reimplementedby>
        <briefdescription>
<para>Returns the event name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const char* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/Event.h" line="73" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_event_1a1578cfc2a5212ffb46108acf3b6c51fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int RDE::Event::getCategoryFlags</definition>
        <argsstring>() const =0</argsstring>
        <name>getCategoryFlags</name>
        <qualifiedname>RDE::Event::getCategoryFlags</qualifiedname>
        <reimplementedby refid="class_r_d_e_1_1_controller_axis_moved_event_1a701a6ca9674adfbabfd24f6d5433aa02">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_controller_button_down_event_1a81093cd460064ef577d9de09eeccd286">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_controller_button_up_event_1af3526cb7b09afd323b1febd6c2ff5e62">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_event_1a0b94c88fae0d3a28a7e10a016a178eaf">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_down_event_1ae99ece395ec83ae5ec198eeca67dadfb">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_up_event_1a573f4c00bef88115a3f6863c08aff358">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_moved_event_1a0ed8e5ff99a3cc8af13646c874b972d6">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_moved_event_1a68c0747555920fd5dd01020c91c76add">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_scrolled_event_1a6f2e5ad82338d80406b9b28450346201">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_button_event_1a194cf5a435726cc3e4a430edd73b2be1">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_resized_event_1a60a5614ca52d288df0de79ae1853e97b">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_moved_event_1a8936dc54b14903f26a62b3bcd4c85f03">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_display_changed_event_1a5c709dce9d078618972a2a1d01b68ae9">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_minimized_event_1abaab09b25d236bf8eecacb9853bcd35e">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_closed_event_1a6afcbf560bd831edc2d752051a1123a0">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_frame_event_1a3c35eecb548d6101063e1b0e80466597">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_update_event_1a9c62f06fb7ff7c8da78f8d8da2e311b1">getCategoryFlags</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_render_event_1add1d0dfe2df25d75005f5367dff5dfc1">getCategoryFlags</reimplementedby>
        <briefdescription>
<para>Returns the categories of an event condensed on a single int. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/Event.h" line="79" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_event_1a2ad3c2a15cf1a3d619cfada8dbf02638" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string RDE::Event::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <qualifiedname>RDE::Event::toString</qualifiedname>
        <reimplementedby refid="class_r_d_e_1_1_controller_axis_moved_event_1a0e9e5df29171182531d977878e8eb17f">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_controller_button_down_event_1aeadfe1d15108bf92c1ac56cd4202b6dd">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_controller_button_up_event_1ab4953f7e64ac84a9ad98cec81c63c107">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_pressed_event_1aa656648ac7ea3ce68e0493b626847bc0">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_typed_event_1a235c2654c87eb820ffece67a48b9e4f2">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_key_released_event_1a3bba6cb7d03c2413b0f7d4938bddec86">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_text_typed_event_1a06ae1f0680295401d69e35f991bc395c">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_down_event_1a664d5d1ccb61f2d88b30f342bc82a64a">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_up_event_1aa025f3e7280fc7596bb17973f3367881">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mobile_touch_moved_event_1accf59515e15ad3d454565d5c8388a665">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_moved_event_1af1946d6d4a99bf7f95cb188ef335b4c9">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_scrolled_event_1a76767c56ea3f3e653e30746afb79b204">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_button_pressed_event_1a9e68f4947bdc26da60640fa834cf8814">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_mouse_button_released_event_1ae26c423ed5339022ca2d60dab06afed2">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_resized_event_1a250e17dd672e67ac21b730a6b35e7755">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_moved_event_1aeeb3d7318e38c77ec09373149cc77931">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_display_changed_event_1a2eef7ffdad28fcab02d80003cb9c4859">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_minimized_event_1adfeed0b461bb0ee7c7a279ec0d08dead">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_closed_event_1a0b7e84f91b1131a5899073ecc9032f66">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_frame_event_1a26cd76370f10bf3e925df055b7ac71dc">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_update_event_1a26482c215b873fa56ed701e16a5ade6a">toString</reimplementedby>
        <reimplementedby refid="class_r_d_e_1_1_window_render_event_1a7f83d45009bb3d473ae8f0bbcad888be">toString</reimplementedby>
        <briefdescription>
<para>Returns all the event in form of string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/Event.h" line="85" column="34" bodyfile="engine/include/core/systems/eventSystem/Event.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_event_1a853416fc3754e4052bf7f24d081f82fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::Event::isInCategory</definition>
        <argsstring>(EventCategory _category) const</argsstring>
        <name>isInCategory</name>
        <qualifiedname>RDE::Event::isInCategory</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a00758501ad8446164e00cc44b096ebec" kindref="member">EventCategory</ref></type>
          <declname>_category</declname>
        </param>
        <briefdescription>
<para>Checks if an event fits in a specific category. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_category</parametername>
</parameternamelist>
<parameterdescription>
<para>Category to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/Event.h" line="92" column="26" bodyfile="engine/include/core/systems/eventSystem/Event.h" bodystart="92" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is the base for any event and contains the information and methods necessary to capture and control the events. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>RDE::ControllerAxisMovedEvent</label>
        <link refid="class_r_d_e_1_1_controller_axis_moved_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>RDE::ControllerButtonDownEvent</label>
        <link refid="class_r_d_e_1_1_controller_button_down_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>RDE::ControllerButtonUpEvent</label>
        <link refid="class_r_d_e_1_1_controller_button_up_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>RDE::Event</label>
        <link refid="class_r_d_e_1_1_event"/>
      </node>
      <node id="5">
        <label>RDE::KeyEvent</label>
        <link refid="class_r_d_e_1_1_key_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>RDE::KeyPressedEvent</label>
        <link refid="class_r_d_e_1_1_key_pressed_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>RDE::KeyReleasedEvent</label>
        <link refid="class_r_d_e_1_1_key_released_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>RDE::KeyTypedEvent</label>
        <link refid="class_r_d_e_1_1_key_typed_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>RDE::MobileTouchDownEvent</label>
        <link refid="class_r_d_e_1_1_mobile_touch_down_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>RDE::MobileTouchMovedEvent</label>
        <link refid="class_r_d_e_1_1_mobile_touch_moved_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>RDE::MobileTouchUpEvent</label>
        <link refid="class_r_d_e_1_1_mobile_touch_up_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>RDE::MouseButtonEvent</label>
        <link refid="class_r_d_e_1_1_mouse_button_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>RDE::MouseButtonPressedEvent</label>
        <link refid="class_r_d_e_1_1_mouse_button_pressed_event"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>RDE::MouseButtonReleasedEvent</label>
        <link refid="class_r_d_e_1_1_mouse_button_released_event"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>RDE::MouseMovedEvent</label>
        <link refid="class_r_d_e_1_1_mouse_moved_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>RDE::MouseScrolledEvent</label>
        <link refid="class_r_d_e_1_1_mouse_scrolled_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>RDE::TextTypedEvent</label>
        <link refid="class_r_d_e_1_1_text_typed_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>RDE::WindowClosedEvent</label>
        <link refid="class_r_d_e_1_1_window_closed_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>RDE::WindowDisplayChangedEvent</label>
        <link refid="class_r_d_e_1_1_window_display_changed_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>RDE::WindowFrameEvent</label>
        <link refid="class_r_d_e_1_1_window_frame_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>RDE::WindowMinimizedEvent</label>
        <link refid="class_r_d_e_1_1_window_minimized_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>RDE::WindowMovedEvent</label>
        <link refid="class_r_d_e_1_1_window_moved_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>RDE::WindowRenderEvent</label>
        <link refid="class_r_d_e_1_1_window_render_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>RDE::WindowResizedEvent</label>
        <link refid="class_r_d_e_1_1_window_resized_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>RDE::WindowUpdateEvent</label>
        <link refid="class_r_d_e_1_1_window_update_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="engine/include/core/systems/eventSystem/Event.h" line="48" column="5" bodyfile="engine/include/core/systems/eventSystem/Event.h" bodystart="48" bodyend="93"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_event_1a1578cfc2a5212ffb46108acf3b6c51fd" prot="public" virt="pure-virtual"><scope>RDE::Event</scope><name>getCategoryFlags</name></member>
      <member refid="class_r_d_e_1_1_event_1a17812fdef1f1bc1517e7658cbdf8ba3b" prot="public" virt="pure-virtual"><scope>RDE::Event</scope><name>getEventType</name></member>
      <member refid="class_r_d_e_1_1_event_1a3ea36fb9accc90c88c34d946515724a9" prot="public" virt="pure-virtual"><scope>RDE::Event</scope><name>getName</name></member>
      <member refid="class_r_d_e_1_1_event_1a5c2348312219e998d3c5e0cdc916bbc6" prot="public" virt="non-virtual"><scope>RDE::Event</scope><name>getStaticType</name></member>
      <member refid="class_r_d_e_1_1_event_1a372a2b0c1a05c7f8b7e48bfbac7042d0" prot="public" virt="non-virtual"><scope>RDE::Event</scope><name>handled</name></member>
      <member refid="class_r_d_e_1_1_event_1a853416fc3754e4052bf7f24d081f82fd" prot="public" virt="non-virtual"><scope>RDE::Event</scope><name>isInCategory</name></member>
      <member refid="class_r_d_e_1_1_event_1a2ad3c2a15cf1a3d619cfada8dbf02638" prot="public" virt="virtual"><scope>RDE::Event</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
