<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_window_moved_event" kind="class" language="C++" prot="public">
    <compoundname>RDE::WindowMovedEvent</compoundname>
    <basecompoundref refid="class_r_d_e_1_1_event" prot="public" virt="non-virtual">RDE::Event</basecompoundref>
    <includes refid="_window_event_8h" local="no">WindowEvent.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_window_moved_event_1a4d323e77997c80e620761afd1b7921e8" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int RDE::WindowMovedEvent::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>RDE::WindowMovedEvent::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="47" column="26" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_window_moved_event_1a4cb7c83d65ee7d025a56a5c38c2e6aca" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int RDE::WindowMovedEvent::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>RDE::WindowMovedEvent::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="47" column="28" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_window_moved_event_1a88acc6b56e20c55dce0cc7ea5df6d53c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RDE::WindowMovedEvent::WindowMovedEvent</definition>
        <argsstring>(unsigned int _x, unsigned int _y)</argsstring>
        <name>WindowMovedEvent</name>
        <qualifiedname>RDE::WindowMovedEvent::WindowMovedEvent</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>_x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="50" column="13" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_moved_event_1ac55ca302850309e52777ba78b55dc967" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int RDE::WindowMovedEvent::getX</definition>
        <argsstring>() const</argsstring>
        <name>getX</name>
        <qualifiedname>RDE::WindowMovedEvent::getX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the new position on x that moving event is setting. <simplesect kind="return"><para>New x of the window. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="54" column="34" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_moved_event_1ae3b3513cd1641983ea40d703df698c23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int RDE::WindowMovedEvent::getY</definition>
        <argsstring>() const</argsstring>
        <name>getY</name>
        <qualifiedname>RDE::WindowMovedEvent::getY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the new position on y that moving event is setting. <simplesect kind="return"><para>New y of the window. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="58" column="34" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_moved_event_1aeeb3d7318e38c77ec09373149cc77931" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string RDE::WindowMovedEvent::toString</definition>
        <argsstring>() const override</argsstring>
        <name>toString</name>
        <qualifiedname>RDE::WindowMovedEvent::toString</qualifiedname>
        <reimplements refid="class_r_d_e_1_1_event_1a2ad3c2a15cf1a3d619cfada8dbf02638">toString</reimplements>
        <briefdescription>
<para>Returns all the event in form of string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="60" column="26" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_moved_event_1aef145e306c8624eca3e385a7f9ce82c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_r_d_e_1af739ab5b6aed02ef5ab138f6f9ebe912" kindref="member">EventType</ref></type>
        <definition>EventType RDE::WindowMovedEvent::getEventType</definition>
        <argsstring>() const override</argsstring>
        <name>getEventType</name>
        <qualifiedname>RDE::WindowMovedEvent::getEventType</qualifiedname>
        <reimplements refid="class_r_d_e_1_1_event_1a17812fdef1f1bc1517e7658cbdf8ba3b">getEventType</reimplements>
        <briefdescription>
<para>Returns the event type from the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>EventType </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="68" column="24" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_moved_event_1a6e766fcc0e210ec34df4729c67e97e96" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>const char * RDE::WindowMovedEvent::getName</definition>
        <argsstring>() const override</argsstring>
        <name>getName</name>
        <qualifiedname>RDE::WindowMovedEvent::getName</qualifiedname>
        <reimplements refid="class_r_d_e_1_1_event_1a3ea36fb9accc90c88c34d946515724a9">getName</reimplements>
        <briefdescription>
<para>Returns the event name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const char* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="69" column="25" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_window_moved_event_1a8936dc54b14903f26a62b3bcd4c85f03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int RDE::WindowMovedEvent::getCategoryFlags</definition>
        <argsstring>() const override</argsstring>
        <name>getCategoryFlags</name>
        <qualifiedname>RDE::WindowMovedEvent::getCategoryFlags</qualifiedname>
        <reimplements refid="class_r_d_e_1_1_event_1a1578cfc2a5212ffb46108acf3b6c51fd">getCategoryFlags</reimplements>
        <briefdescription>
<para>Returns the categories of an event condensed on a single int. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="70" column="18" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="70" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_r_d_e_1_1_window_moved_event_1aecbcd277cb83c82874df5eed57f92a38" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_r_d_e_1af739ab5b6aed02ef5ab138f6f9ebe912" kindref="member">EventType</ref></type>
        <definition>static EventType RDE::WindowMovedEvent::getStaticType</definition>
        <argsstring>()</argsstring>
        <name>getStaticType</name>
        <qualifiedname>RDE::WindowMovedEvent::getStaticType</qualifiedname>
        <briefdescription>
<para>Implementation of the rest of the static and virtual methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="67" column="30" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="67" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents all of the events that involves moving the window. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>RDE::Event</label>
        <link refid="class_r_d_e_1_1_event"/>
      </node>
      <node id="1">
        <label>RDE::WindowMovedEvent</label>
        <link refid="class_r_d_e_1_1_window_moved_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>RDE::Event</label>
        <link refid="class_r_d_e_1_1_event"/>
      </node>
      <node id="1">
        <label>RDE::WindowMovedEvent</label>
        <link refid="class_r_d_e_1_1_window_moved_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="engine/include/core/systems/eventSystem/WindowEvent.h" line="45" column="5" bodyfile="engine/include/core/systems/eventSystem/WindowEvent.h" bodystart="45" bodyend="71"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_window_moved_event_1a8936dc54b14903f26a62b3bcd4c85f03" prot="public" virt="virtual"><scope>RDE::WindowMovedEvent</scope><name>getCategoryFlags</name></member>
      <member refid="class_r_d_e_1_1_window_moved_event_1aef145e306c8624eca3e385a7f9ce82c5" prot="public" virt="virtual"><scope>RDE::WindowMovedEvent</scope><name>getEventType</name></member>
      <member refid="class_r_d_e_1_1_window_moved_event_1a6e766fcc0e210ec34df4729c67e97e96" prot="public" virt="virtual"><scope>RDE::WindowMovedEvent</scope><name>getName</name></member>
      <member refid="class_r_d_e_1_1_window_moved_event_1aecbcd277cb83c82874df5eed57f92a38" prot="public" virt="non-virtual"><scope>RDE::WindowMovedEvent</scope><name>getStaticType</name></member>
      <member refid="class_r_d_e_1_1_window_moved_event_1ac55ca302850309e52777ba78b55dc967" prot="public" virt="non-virtual"><scope>RDE::WindowMovedEvent</scope><name>getX</name></member>
      <member refid="class_r_d_e_1_1_window_moved_event_1ae3b3513cd1641983ea40d703df698c23" prot="public" virt="non-virtual"><scope>RDE::WindowMovedEvent</scope><name>getY</name></member>
      <member refid="class_r_d_e_1_1_event_1a372a2b0c1a05c7f8b7e48bfbac7042d0" prot="public" virt="non-virtual"><scope>RDE::WindowMovedEvent</scope><name>handled</name></member>
      <member refid="class_r_d_e_1_1_event_1a853416fc3754e4052bf7f24d081f82fd" prot="public" virt="non-virtual"><scope>RDE::WindowMovedEvent</scope><name>isInCategory</name></member>
      <member refid="class_r_d_e_1_1_window_moved_event_1aeeb3d7318e38c77ec09373149cc77931" prot="public" virt="virtual"><scope>RDE::WindowMovedEvent</scope><name>toString</name></member>
      <member refid="class_r_d_e_1_1_window_moved_event_1a88acc6b56e20c55dce0cc7ea5df6d53c" prot="public" virt="non-virtual"><scope>RDE::WindowMovedEvent</scope><name>WindowMovedEvent</name></member>
      <member refid="class_r_d_e_1_1_window_moved_event_1a4d323e77997c80e620761afd1b7921e8" prot="private" virt="non-virtual"><scope>RDE::WindowMovedEvent</scope><name>x</name></member>
      <member refid="class_r_d_e_1_1_window_moved_event_1a4cb7c83d65ee7d025a56a5c38c2e6aca" prot="private" virt="non-virtual"><scope>RDE::WindowMovedEvent</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
