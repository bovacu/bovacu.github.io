<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_camera" kind="class" language="C++" prot="public">
    <compoundname>RDE::Camera</compoundname>
    <basecompoundref refid="struct_component_base" prot="public" virt="non-virtual">ComponentBase</basecompoundref>
    <includes refid="_camera_8h" local="no">Camera.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_r_d_e_1_1_camera_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Scene</definition>
        <argsstring></argsstring>
        <name>Scene</name>
        <qualifiedname>RDE::Camera::Scene</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_scene" kindref="compound">Scene</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="31" column="22" bodyfile="engine/include/core/render/Camera.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_camera_1a58c73102d3fe3fd8f7147ccf27b7883d" prot="private" static="no" mutable="no">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref></type>
        <definition>Vec2I RDE::Camera::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <qualifiedname>RDE::Camera::size</qualifiedname>
        <briefdescription>
<para>Size of the camera, as a rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="37" column="19" bodyfile="engine/include/core/render/Camera.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_camera_1ac162b1df656dd2f63e60d88f05856b2f" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float RDE::Camera::zoom</definition>
        <argsstring></argsstring>
        <name>zoom</name>
        <qualifiedname>RDE::Camera::zoom</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Zoom of the camera. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="42" column="19" bodyfile="engine/include/core/render/Camera.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_camera_1a235f77be72a88e37449d179b09fa681c" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float RDE::Camera::zoomSpeed</definition>
        <argsstring></argsstring>
        <name>zoomSpeed</name>
        <qualifiedname>RDE::Camera::zoomSpeed</qualifiedname>
        <initializer>= 0.25f</initializer>
        <briefdescription>
<para>How fast it zooms in/out. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="47" column="19" bodyfile="engine/include/core/render/Camera.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_camera_1ac8cb4fb280d5a4262af29c172d6093a4" prot="private" static="no" mutable="no">
        <type>glm::mat4</type>
        <definition>glm::mat4 RDE::Camera::projectionMatrix</definition>
        <argsstring></argsstring>
        <name>projectionMatrix</name>
        <qualifiedname>RDE::Camera::projectionMatrix</qualifiedname>
        <briefdescription>
<para>Projection Matrix, basically if it is Perspective or Orthographic. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="52" column="23" bodyfile="engine/include/core/render/Camera.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_camera_1a5a3c439582d0cc145cf9bce2b49a9e72" prot="private" static="no" mutable="no">
        <type>glm::mat4</type>
        <definition>glm::mat4 RDE::Camera::viewMatrix</definition>
        <argsstring></argsstring>
        <name>viewMatrix</name>
        <qualifiedname>RDE::Camera::viewMatrix</qualifiedname>
        <initializer>{1.f}</initializer>
        <briefdescription>
<para>View Matrix, what the camera actually sees. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="57" column="23" bodyfile="engine/include/core/render/Camera.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_camera_1a0486e75a3caa49afd0d3c1da3f9a71dd" prot="private" static="no" mutable="no">
        <type>glm::mat4</type>
        <definition>glm::mat4 RDE::Camera::viewProjectionMatrix</definition>
        <argsstring></argsstring>
        <name>viewProjectionMatrix</name>
        <qualifiedname>RDE::Camera::viewProjectionMatrix</qualifiedname>
        <briefdescription>
<para>View Projection Matrix, the combination of both matrices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="62" column="23" bodyfile="engine/include/core/render/Camera.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_camera_1a7bc81a91d113218491d75bca8d588d5f" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_view_port" kindref="compound">ViewPort</ref> *</type>
        <definition>ViewPort* RDE::Camera::viewport</definition>
        <argsstring></argsstring>
        <name>viewport</name>
        <qualifiedname>RDE::Camera::viewport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>IViewPort </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="67" column="22" bodyfile="engine/include/core/render/Camera.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_camera_1a88c4ab94ad2efad080efff11904ae6aa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RDE::Camera::dirty</definition>
        <argsstring></argsstring>
        <name>dirty</name>
        <qualifiedname>RDE::Camera::dirty</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="69" column="18" bodyfile="engine/include/core/render/Camera.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_camera_1a4115cbc65b7f434cb048f5261ba1f882" prot="public" static="no" mutable="no">
        <type><ref refid="struct_r_d_e_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>Node* RDE::Camera::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <qualifiedname>RDE::Camera::node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="72" column="18" bodyfile="engine/include/core/render/Camera.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1adbc4f0ca9f3f66a0787141dfe5ee4ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RDE::Camera::Camera</definition>
        <argsstring>(Node *_node, Manager *_manager, Graph *_graph, const Window *_window)</argsstring>
        <name>Camera</name>
        <qualifiedname>RDE::Camera::Camera</qualifiedname>
        <param>
          <type><ref refid="struct_r_d_e_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>_node</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_manager" kindref="compound">Manager</ref> *</type>
          <declname>_manager</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_graph" kindref="compound">Graph</ref> *</type>
          <declname>_graph</declname>
        </param>
        <param>
          <type>const <ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>_window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="74" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a3c5135cd8142c0527bb112c9da091fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RDE::Camera::~Camera</definition>
        <argsstring>()</argsstring>
        <name>~Camera</name>
        <qualifiedname>RDE::Camera::~Camera</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="75" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a13e20a7b9630fba06105b7f8a044c0af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Camera::onEvent</definition>
        <argsstring>(Event &amp;_event)</argsstring>
        <name>onEvent</name>
        <qualifiedname>RDE::Camera::onEvent</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles events that concerns the camera. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> to be handled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="81" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1aaf24a7a5e05a27cef295887936ec4a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::Camera::onMouseScrolled</definition>
        <argsstring>(MouseScrolledEvent &amp;_event)</argsstring>
        <name>onMouseScrolled</name>
        <qualifiedname>RDE::Camera::onMouseScrolled</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_mouse_scrolled_event" kindref="compound">MouseScrolledEvent</ref> &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Handles the event of mouse scrolling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> to be handled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="88" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1ac8004416c55854033c06e15b543be311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Camera::onResize</definition>
        <argsstring>(int _width, int _height)</argsstring>
        <name>onResize</name>
        <qualifiedname>RDE::Camera::onResize</qualifiedname>
        <param>
          <type>int</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_height</declname>
        </param>
        <briefdescription>
<para>Resizes the camera components depending on the <ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_width</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref>&apos;s width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_height</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref>&apos;s height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="95" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a214f5ecf148ff86c6c19cd2d768347b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>glm::mat4 &amp;</type>
        <definition>glm::mat4 &amp; RDE::Camera::getProjectionMatrix</definition>
        <argsstring>()</argsstring>
        <name>getProjectionMatrix</name>
        <qualifiedname>RDE::Camera::getProjectionMatrix</qualifiedname>
        <briefdescription>
<para>Returns the Projection Matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>glm::mat4&amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="101" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a3e8b2a4e68b09fa99615e2b77efdece2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>glm::mat4 &amp;</type>
        <definition>glm::mat4 &amp; RDE::Camera::getViewMatrix</definition>
        <argsstring>()</argsstring>
        <name>getViewMatrix</name>
        <qualifiedname>RDE::Camera::getViewMatrix</qualifiedname>
        <briefdescription>
<para>Returns the View Matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>glm::mat4&amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="107" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a28387c8cfdd38e6168e97eceafcb3193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>glm::mat4 &amp;</type>
        <definition>glm::mat4 &amp; RDE::Camera::getViewProjectionMatrix</definition>
        <argsstring>()</argsstring>
        <name>getViewProjectionMatrix</name>
        <qualifiedname>RDE::Camera::getViewProjectionMatrix</qualifiedname>
        <briefdescription>
<para>Returns the View Projection Matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>glm::mat4&amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="113" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a4b0fb6433bc73b54ad5aa414857599c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Camera::setCameraSize</definition>
        <argsstring>(const Vec2I &amp;_cameraSize)</argsstring>
        <name>setCameraSize</name>
        <qualifiedname>RDE::Camera::setCameraSize</qualifiedname>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref> &amp;</type>
          <declname>_cameraSize</declname>
        </param>
        <briefdescription>
<para>Sets the rectangle view size of the camera. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_cameraSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the rectangle view of the camera </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="119" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a215a0c283f918b370e292469f2f2cc39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Camera::setCameraSize</definition>
        <argsstring>(int _width, int _height)</argsstring>
        <name>setCameraSize</name>
        <qualifiedname>RDE::Camera::setCameraSize</qualifiedname>
        <param>
          <type>int</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_height</declname>
        </param>
        <briefdescription>
<para>Sets the rectangle view size of the camera. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the rectangle view of the camera </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the rectangle view of the camera </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="126" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a801f41ffe11592861bc21ab4a24f3dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2I</ref></type>
        <definition>Vec2I RDE::Camera::getCameraSize</definition>
        <argsstring>()</argsstring>
        <name>getCameraSize</name>
        <qualifiedname>RDE::Camera::getCameraSize</qualifiedname>
        <briefdescription>
<para>Returns the camera size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vec2I </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="132" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a79a657325281a0aa007f311795de7c83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RDE::Camera::getAspectRatio</definition>
        <argsstring>() const</argsstring>
        <name>getAspectRatio</name>
        <qualifiedname>RDE::Camera::getAspectRatio</qualifiedname>
        <briefdescription>
<para>Returns the aspect ratio of the <ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="138" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a2995a758689eb468c911f26e9d982bdd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RDE::Camera::getCurrentZoomLevel</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentZoomLevel</name>
        <qualifiedname>RDE::Camera::getCurrentZoomLevel</qualifiedname>
        <briefdescription>
<para>Returns the current level of zoom of the camera. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="144" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1ae11fc91a0b94a8fad84a7f5794f13b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Camera::setCurrentZoomLevel</definition>
        <argsstring>(float _zoomLevel)</argsstring>
        <name>setCurrentZoomLevel</name>
        <qualifiedname>RDE::Camera::setCurrentZoomLevel</qualifiedname>
        <param>
          <type>float</type>
          <declname>_zoomLevel</declname>
        </param>
        <briefdescription>
<para>Sets the current level of zoom of the camera. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_zoomLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>Zoom to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="150" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a6971ac4973e3eef4fb4681238a70ad65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RDE::Camera::getZoomSpeed</definition>
        <argsstring>() const</argsstring>
        <name>getZoomSpeed</name>
        <qualifiedname>RDE::Camera::getZoomSpeed</qualifiedname>
        <briefdescription>
<para>Gets the speed of camera&apos;s zooming. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>float </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="156" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1aa32940427e587870533235f52c8b80b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Camera::setZoomSpeed</definition>
        <argsstring>(float _zoomSpeed)</argsstring>
        <name>setZoomSpeed</name>
        <qualifiedname>RDE::Camera::setZoomSpeed</qualifiedname>
        <param>
          <type>float</type>
          <declname>_zoomSpeed</declname>
        </param>
        <briefdescription>
<para>Sets the speed of camera&apos;s zooming. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_zoomSpeed</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_camera" kindref="compound">Camera</ref>&apos;s zooming speed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="162" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1ad73b6e77f1a2d0b320af09e195637219" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>glm::mat4 &amp;</type>
        <definition>glm::mat4 &amp; RDE::Camera::operator()</definition>
        <argsstring>(const Camera &amp;_camera)</argsstring>
        <name>operator()</name>
        <qualifiedname>RDE::Camera::operator()</qualifiedname>
        <param>
          <type>const <ref refid="class_r_d_e_1_1_camera" kindref="compound">Camera</ref> &amp;</type>
          <declname>_camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="164" column="23" bodyfile="engine/include/core/render/Camera.h" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1aeabb13becf64ff561a3a6b2bed0cc7c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_r_d_e_1_1_view_port" kindref="compound">ViewPort</ref> *</type>
        <definition>ViewPort * RDE::Camera::getViewport</definition>
        <argsstring>() const</argsstring>
        <name>getViewport</name>
        <qualifiedname>RDE::Camera::getViewport</qualifiedname>
        <briefdescription>
<para>Returns the viewport. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>IViewPort* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="172" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1af85131dac830e4419854c13ca649aebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::Camera::isLandscape</definition>
        <argsstring>()</argsstring>
        <name>isLandscape</name>
        <qualifiedname>RDE::Camera::isLandscape</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="174" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a4d5478f520b545d1a081f6f61fd2e16e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::Camera::isElementInside</definition>
        <argsstring>(Transform *_transform, const Vec2F &amp;_size) const</argsstring>
        <name>isElementInside</name>
        <qualifiedname>RDE::Camera::isElementInside</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_transform" kindref="compound">Transform</ref> *</type>
          <declname>_transform</declname>
        </param>
        <param>
          <type>const <ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref> &amp;</type>
          <declname>_size</declname>
        </param>
        <briefdescription>
<para>Returns if an element is inside the camera boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="180" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a6af185929e46666ee43114d3f90bb0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Camera::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>RDE::Camera::update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="182" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a95afc2e4051eebb56b559ee05a6971fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RDE::Camera::setEnabled</definition>
        <argsstring>(bool _enabled) override</argsstring>
        <name>setEnabled</name>
        <qualifiedname>RDE::Camera::setEnabled</qualifiedname>
        <reimplements refid="struct_component_base_1a5985a55f1b7d0559c6e04bf6931740bd">setEnabled</reimplements>
        <param>
          <type>bool</type>
          <declname>_enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="184" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a65e36c7f9b20acf0be0d1fd93fc126e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool RDE::Camera::isEnabled</definition>
        <argsstring>() override</argsstring>
        <name>isEnabled</name>
        <qualifiedname>RDE::Camera::isEnabled</qualifiedname>
        <reimplements refid="struct_component_base_1a1a4f1ecee1f4e4841528402875858b9f">isEnabled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="185" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_r_d_e_1_1_camera_1a82b8a3719b6332410aff583e69809422" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::Camera::recalculateViewMatrix</definition>
        <argsstring>()</argsstring>
        <name>recalculateViewMatrix</name>
        <qualifiedname>RDE::Camera::recalculateViewMatrix</qualifiedname>
        <briefdescription>
<para>Computes the View Matrix of the camera. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/render/Camera.h" line="191" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents what the engine sees and what is going to be rendered. This is used as a Component of the inner ECS System, so you can add Cameras to any desired <ref refid="struct_r_d_e_1_1_node" kindref="compound">Node</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ComponentBase</label>
        <link refid="struct_component_base"/>
      </node>
      <node id="1">
        <label>RDE::Camera</label>
        <link refid="class_r_d_e_1_1_camera"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ComponentBase</label>
        <link refid="struct_component_base"/>
      </node>
      <node id="1">
        <label>RDE::Camera</label>
        <link refid="class_r_d_e_1_1_camera"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>RDE::Node</label>
        <link refid="struct_r_d_e_1_1_node"/>
      </node>
    </collaborationgraph>
    <location file="engine/include/core/render/Camera.h" line="30" column="5" bodyfile="engine/include/core/render/Camera.h" bodystart="30" bodyend="192"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_camera_1adbc4f0ca9f3f66a0787141dfe5ee4ed9" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>Camera</name></member>
      <member refid="class_r_d_e_1_1_camera_1a88c4ab94ad2efad080efff11904ae6aa" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>dirty</name></member>
      <member refid="class_r_d_e_1_1_camera_1a79a657325281a0aa007f311795de7c83" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>getAspectRatio</name></member>
      <member refid="class_r_d_e_1_1_camera_1a801f41ffe11592861bc21ab4a24f3dae" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>getCameraSize</name></member>
      <member refid="class_r_d_e_1_1_camera_1a2995a758689eb468c911f26e9d982bdd" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>getCurrentZoomLevel</name></member>
      <member refid="class_r_d_e_1_1_camera_1a214f5ecf148ff86c6c19cd2d768347b4" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>getProjectionMatrix</name></member>
      <member refid="class_r_d_e_1_1_camera_1a3e8b2a4e68b09fa99615e2b77efdece2" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>getViewMatrix</name></member>
      <member refid="class_r_d_e_1_1_camera_1aeabb13becf64ff561a3a6b2bed0cc7c7" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>getViewport</name></member>
      <member refid="class_r_d_e_1_1_camera_1a28387c8cfdd38e6168e97eceafcb3193" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>getViewProjectionMatrix</name></member>
      <member refid="class_r_d_e_1_1_camera_1a6971ac4973e3eef4fb4681238a70ad65" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>getZoomSpeed</name></member>
      <member refid="class_r_d_e_1_1_camera_1a4d5478f520b545d1a081f6f61fd2e16e" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>isElementInside</name></member>
      <member refid="class_r_d_e_1_1_camera_1a65e36c7f9b20acf0be0d1fd93fc126e3" prot="public" virt="virtual"><scope>RDE::Camera</scope><name>isEnabled</name></member>
      <member refid="class_r_d_e_1_1_camera_1af85131dac830e4419854c13ca649aebf" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>isLandscape</name></member>
      <member refid="class_r_d_e_1_1_camera_1a4115cbc65b7f434cb048f5261ba1f882" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>node</name></member>
      <member refid="class_r_d_e_1_1_camera_1a13e20a7b9630fba06105b7f8a044c0af" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>onEvent</name></member>
      <member refid="class_r_d_e_1_1_camera_1aaf24a7a5e05a27cef295887936ec4a65" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>onMouseScrolled</name></member>
      <member refid="class_r_d_e_1_1_camera_1ac8004416c55854033c06e15b543be311" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>onResize</name></member>
      <member refid="class_r_d_e_1_1_camera_1ad73b6e77f1a2d0b320af09e195637219" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>operator()</name></member>
      <member refid="class_r_d_e_1_1_camera_1ac8cb4fb280d5a4262af29c172d6093a4" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>projectionMatrix</name></member>
      <member refid="class_r_d_e_1_1_camera_1a82b8a3719b6332410aff583e69809422" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>recalculateViewMatrix</name></member>
      <member refid="class_r_d_e_1_1_camera_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>Scene</name></member>
      <member refid="class_r_d_e_1_1_camera_1a4b0fb6433bc73b54ad5aa414857599c4" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>setCameraSize</name></member>
      <member refid="class_r_d_e_1_1_camera_1a215a0c283f918b370e292469f2f2cc39" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>setCameraSize</name></member>
      <member refid="class_r_d_e_1_1_camera_1ae11fc91a0b94a8fad84a7f5794f13b35" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>setCurrentZoomLevel</name></member>
      <member refid="class_r_d_e_1_1_camera_1a95afc2e4051eebb56b559ee05a6971fb" prot="public" virt="virtual"><scope>RDE::Camera</scope><name>setEnabled</name></member>
      <member refid="class_r_d_e_1_1_camera_1aa32940427e587870533235f52c8b80b5" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>setZoomSpeed</name></member>
      <member refid="class_r_d_e_1_1_camera_1a58c73102d3fe3fd8f7147ccf27b7883d" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>size</name></member>
      <member refid="class_r_d_e_1_1_camera_1a6af185929e46666ee43114d3f90bb0e8" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>update</name></member>
      <member refid="class_r_d_e_1_1_camera_1a5a3c439582d0cc145cf9bce2b49a9e72" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>viewMatrix</name></member>
      <member refid="class_r_d_e_1_1_camera_1a7bc81a91d113218491d75bca8d588d5f" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>viewport</name></member>
      <member refid="class_r_d_e_1_1_camera_1a0486e75a3caa49afd0d3c1da3f9a71dd" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>viewProjectionMatrix</name></member>
      <member refid="class_r_d_e_1_1_camera_1ac162b1df656dd2f63e60d88f05856b2f" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>zoom</name></member>
      <member refid="class_r_d_e_1_1_camera_1a235f77be72a88e37449d179b09fa681c" prot="private" virt="non-virtual"><scope>RDE::Camera</scope><name>zoomSpeed</name></member>
      <member refid="class_r_d_e_1_1_camera_1a3c5135cd8142c0527bb112c9da091fd5" prot="public" virt="non-virtual"><scope>RDE::Camera</scope><name>~Camera</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
