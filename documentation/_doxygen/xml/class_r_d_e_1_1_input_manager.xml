<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_input_manager" kind="class" language="C++" prot="public">
    <compoundname>RDE::InputManager</compoundname>
    <includes refid="_input_8h" local="no">Input.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_r_d_e_1_1_input_manager_1aa893ba20e3aa1e585cd58701ebeee783" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_window_input" kindref="compound">WindowInput</ref> *</type>
        <definition>WindowInput* RDE::InputManager::windowInput</definition>
        <argsstring></argsstring>
        <name>windowInput</name>
        <qualifiedname>RDE::InputManager::windowInput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_r_d_e_1_1_window_input" kindref="compound">WindowInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="120" column="25" bodyfile="engine/include/core/systems/inputSystem/input/Input.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_input_manager_1ab9a38ca0127dbdeb12b30eb392731452" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_keyboard_input" kindref="compound">KeyboardInput</ref> *</type>
        <definition>KeyboardInput* RDE::InputManager::keyboardInput</definition>
        <argsstring></argsstring>
        <name>keyboardInput</name>
        <qualifiedname>RDE::InputManager::keyboardInput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_r_d_e_1_1_keyboard_input" kindref="compound">KeyboardInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="125" column="27" bodyfile="engine/include/core/systems/inputSystem/input/Input.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_input_manager_1a784c00221b64cc00de9daa58a5b453d6" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_mouse_input" kindref="compound">MouseInput</ref> *</type>
        <definition>MouseInput* RDE::InputManager::mouseInput</definition>
        <argsstring></argsstring>
        <name>mouseInput</name>
        <qualifiedname>RDE::InputManager::mouseInput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_r_d_e_1_1_mouse_input" kindref="compound">MouseInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="130" column="24" bodyfile="engine/include/core/systems/inputSystem/input/Input.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_input_manager_1a820a5f066e4616845b3060482e42986d" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_controller_input" kindref="compound">ControllerInput</ref> *</type>
        <definition>ControllerInput* RDE::InputManager::controllerInput</definition>
        <argsstring></argsstring>
        <name>controllerInput</name>
        <qualifiedname>RDE::InputManager::controllerInput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_r_d_e_1_1_controller_input" kindref="compound">ControllerInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="135" column="29" bodyfile="engine/include/core/systems/inputSystem/input/Input.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_input_manager_1a67d00a9ff63550d8af1ceb127df55c39" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_mobile_input" kindref="compound">MobileInput</ref> *</type>
        <definition>MobileInput* RDE::InputManager::mobileInput</definition>
        <argsstring></argsstring>
        <name>mobileInput</name>
        <qualifiedname>RDE::InputManager::mobileInput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_r_d_e_1_1_mobile_input" kindref="compound">MobileInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="140" column="25" bodyfile="engine/include/core/systems/inputSystem/input/Input.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_d_e_1_1_input_manager_1af043107c75e84d0f59ef7882e535c8a7" prot="private" static="no" mutable="no">
        <type><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> *</type>
        <definition>Engine* RDE::InputManager::engine</definition>
        <argsstring></argsstring>
        <name>engine</name>
        <qualifiedname>RDE::InputManager::engine</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="145" column="20" bodyfile="engine/include/core/systems/inputSystem/input/Input.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a801b49121f48955ef095d97af7fdd5a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::InputManager::init</definition>
        <argsstring>(Engine *_engine, Window *_window)</argsstring>
        <name>init</name>
        <qualifiedname>RDE::InputManager::init</qualifiedname>
        <param>
          <type><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> *</type>
          <declname>_engine</declname>
        </param>
        <param>
          <type><ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> *</type>
          <declname>_window</declname>
        </param>
        <briefdescription>
<para>This initiates all of the crucial elements of the input system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This is not meant to be called by end-users. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_engine</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_engine" kindref="compound">Engine</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_window</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_window" kindref="compound">Window</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="154" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a2115cb69b4f71c626b824339b465eb26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::InputManager::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <qualifiedname>RDE::InputManager::destroy</qualifiedname>
        <briefdescription>
<para>Destroys all input system elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This is not meant to be called by end-users. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="160" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a831dc97613ff2754094efab87aad4c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::InputManager::pollEvents</definition>
        <argsstring>()</argsstring>
        <name>pollEvents</name>
        <qualifiedname>RDE::InputManager::pollEvents</qualifiedname>
        <briefdescription>
<para>Loops over all the captured events by SDL on a frame and handles them. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This is not meant to be called by end-users. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="166" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1af87de5cc1a9e715f31b6e61f43160dbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isKeyJustPressed</definition>
        <argsstring>(KeyCode _key)</argsstring>
        <name>isKeyJustPressed</name>
        <qualifiedname>RDE::InputManager::isKeyJustPressed</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1ae1b377580a5f0afd4b6021072ed14bde" kindref="member">KeyCode</ref></type>
          <declname>_key</declname>
        </param>
        <briefdescription>
<para>Returns true if the key is pressed and won&apos;t return true until the key is released and pressed again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key pressed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="174" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a18ba2bf0cfe0ed1bb755976ba5ba156f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isKeyJustReleased</definition>
        <argsstring>(KeyCode _key)</argsstring>
        <name>isKeyJustReleased</name>
        <qualifiedname>RDE::InputManager::isKeyJustReleased</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1ae1b377580a5f0afd4b6021072ed14bde" kindref="member">KeyCode</ref></type>
          <declname>_key</declname>
        </param>
        <briefdescription>
<para>Returns true if the key is released and won&apos;t return true until the key is pressed and released again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key released </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="181" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a5f36ac467a41d4897ed020e31c99274e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isKeyPressed</definition>
        <argsstring>(KeyCode _key)</argsstring>
        <name>isKeyPressed</name>
        <qualifiedname>RDE::InputManager::isKeyPressed</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1ae1b377580a5f0afd4b6021072ed14bde" kindref="member">KeyCode</ref></type>
          <declname>_key</declname>
        </param>
        <briefdescription>
<para>Returns true while the key is being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key pressed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="188" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1afba59b338702ae9884258e92c9d5507b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isKeyReleased</definition>
        <argsstring>(KeyCode _key)</argsstring>
        <name>isKeyReleased</name>
        <qualifiedname>RDE::InputManager::isKeyReleased</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1ae1b377580a5f0afd4b6021072ed14bde" kindref="member">KeyCode</ref></type>
          <declname>_key</declname>
        </param>
        <briefdescription>
<para>Returns true while the key is not being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key released </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="195" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a8617526af870d2b427a0b2f817d1c004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isMouseJustPressed</definition>
        <argsstring>(MouseCode _button)</argsstring>
        <name>isMouseJustPressed</name>
        <qualifiedname>RDE::InputManager::isMouseJustPressed</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a6079d97bd2b05de1813ab71932242c87" kindref="member">MouseCode</ref></type>
          <declname>_button</declname>
        </param>
        <briefdescription>
<para>Returns true if the button is pressed and won&apos;t return true until the button is released and pressed again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_button</parametername>
</parameternamelist>
<parameterdescription>
<para>Mouse button pressed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="203" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a34c1930540c60508b7f8d8db2b64cc40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isMouseJustReleased</definition>
        <argsstring>(MouseCode _button)</argsstring>
        <name>isMouseJustReleased</name>
        <qualifiedname>RDE::InputManager::isMouseJustReleased</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a6079d97bd2b05de1813ab71932242c87" kindref="member">MouseCode</ref></type>
          <declname>_button</declname>
        </param>
        <briefdescription>
<para>Returns true if the button is released and won&apos;t return true until the button is pressed and released again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_button</parametername>
</parameternamelist>
<parameterdescription>
<para>Mouse button released </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="210" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a293cad5478ca5cae8bdbef25925ee1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isMousePressed</definition>
        <argsstring>(MouseCode _button)</argsstring>
        <name>isMousePressed</name>
        <qualifiedname>RDE::InputManager::isMousePressed</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a6079d97bd2b05de1813ab71932242c87" kindref="member">MouseCode</ref></type>
          <declname>_button</declname>
        </param>
        <briefdescription>
<para>Returns true while the button is being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_button</parametername>
</parameternamelist>
<parameterdescription>
<para>Mouse button pressed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="217" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1acb889c95a989d9077cd1ccc7c00e6369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isMouseReleased</definition>
        <argsstring>(MouseCode _button)</argsstring>
        <name>isMouseReleased</name>
        <qualifiedname>RDE::InputManager::isMouseReleased</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a6079d97bd2b05de1813ab71932242c87" kindref="member">MouseCode</ref></type>
          <declname>_button</declname>
        </param>
        <briefdescription>
<para>Returns true while the button is not being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_button</parametername>
</parameternamelist>
<parameterdescription>
<para>Mouse button released </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="224" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1aaa0491636c9c36f91f9d4608daf06b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref></type>
        <definition>Vec2F RDE::InputManager::getMousePosScreenCoords</definition>
        <argsstring>(bool _centeredMiddleScreen=true)</argsstring>
        <name>getMousePosScreenCoords</name>
        <qualifiedname>RDE::InputManager::getMousePosScreenCoords</qualifiedname>
        <param>
          <type>bool</type>
          <declname>_centeredMiddleScreen</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns the mouse position in screen coordinates, so x: [0, WindowWidth], y: [0, WindowHeight]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_centeredMiddleScreen</parametername>
</parameternamelist>
<parameterdescription>
<para>Centered on screen center or left-bottom corner </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vec2F </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="231" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a967bc8b7dc0c81a73b7ee0025dcf7167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref></type>
        <definition>Vec2F RDE::InputManager::getMousePosWorldPos</definition>
        <argsstring>()</argsstring>
        <name>getMousePosWorldPos</name>
        <qualifiedname>RDE::InputManager::getMousePosWorldPos</qualifiedname>
        <briefdescription>
<para>Returns the mouse position inside the world coordinates system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vec2F </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="237" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a14115c36583f3b0049cbfb598287d6af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_r_d_e_1_1_vec2" kindref="compound">Vec2F</ref></type>
        <definition>Vec2F RDE::InputManager::getMousePosCanvas</definition>
        <argsstring>()</argsstring>
        <name>getMousePosCanvas</name>
        <qualifiedname>RDE::InputManager::getMousePosCanvas</qualifiedname>
        <briefdescription>
<para>Returns mouse position with <ref refid="class_r_d_e_1_1_canvas" kindref="compound">Canvas</ref> camera zoom. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vec2f </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="243" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a50bba8199d23559a5d8a0fccac8072ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::reassignController</definition>
        <argsstring>(int _controllerID, int _as)</argsstring>
        <name>reassignController</name>
        <qualifiedname>RDE::InputManager::reassignController</qualifiedname>
        <param>
          <type>int</type>
          <declname>_controllerID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_as</declname>
        </param>
        <briefdescription>
<para>This function changes the order of the controllers (use to set who is player1, for example). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_controllerID</parametername>
</parameternamelist>
<parameterdescription>
<para>Current ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_as</parametername>
</parameternamelist>
<parameterdescription>
<para>New ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="251" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1afcae7ae2faeb7286463318ace4c36afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isGamepadButtonJustPressed</definition>
        <argsstring>(ControllerButtons _button, int _controllerID=0)</argsstring>
        <name>isGamepadButtonJustPressed</name>
        <qualifiedname>RDE::InputManager::isGamepadButtonJustPressed</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a2b6a7795115bb4316612130df395aa11" kindref="member">ControllerButtons</ref></type>
          <declname>_button</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_controllerID</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns true if the button is pressed and won&apos;t return true until the button is released and pressed again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_button</parametername>
</parameternamelist>
<parameterdescription>
<para>Button pressed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_controllerID</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="259" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a7db337c4d9a1844e957f648058aefed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isGamepadButtonJustReleased</definition>
        <argsstring>(ControllerButtons _button, int _controllerID=0)</argsstring>
        <name>isGamepadButtonJustReleased</name>
        <qualifiedname>RDE::InputManager::isGamepadButtonJustReleased</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a2b6a7795115bb4316612130df395aa11" kindref="member">ControllerButtons</ref></type>
          <declname>_button</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_controllerID</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns true if the button is released and won&apos;t return true until the button is pressed and released again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_button</parametername>
</parameternamelist>
<parameterdescription>
<para>Button released </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_controllerID</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="267" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1aa4c9dbdecd87178a8c1c48937b5dc64e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isGamepadButtonPressed</definition>
        <argsstring>(ControllerButtons _button, int _controllerID=0)</argsstring>
        <name>isGamepadButtonPressed</name>
        <qualifiedname>RDE::InputManager::isGamepadButtonPressed</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a2b6a7795115bb4316612130df395aa11" kindref="member">ControllerButtons</ref></type>
          <declname>_button</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_controllerID</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns true while the button is being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_button</parametername>
</parameternamelist>
<parameterdescription>
<para>Button pressed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_controllerID</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="275" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a7a4c758460d107421340e3b92879bece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isGamepadButtonReleased</definition>
        <argsstring>(ControllerButtons _button, int _controllerID=0)</argsstring>
        <name>isGamepadButtonReleased</name>
        <qualifiedname>RDE::InputManager::isGamepadButtonReleased</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a2b6a7795115bb4316612130df395aa11" kindref="member">ControllerButtons</ref></type>
          <declname>_button</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_controllerID</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns true while the button is not being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_button</parametername>
</parameternamelist>
<parameterdescription>
<para>Button released </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_controllerID</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="283" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a64eb9f9c65e2952b36765eb20d2e448c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::gamepadVibrate</definition>
        <argsstring>(int _controllerID=0, const std::string &amp;_vibrationEffectName=&quot;default&quot;)</argsstring>
        <name>gamepadVibrate</name>
        <qualifiedname>RDE::InputManager::gamepadVibrate</qualifiedname>
        <param>
          <type>int</type>
          <declname>_controllerID</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_vibrationEffectName</declname>
          <defval>&quot;default&quot;</defval>
        </param>
        <briefdescription>
<para>Makes the controller vibrate at a specific vibration effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_controllerID</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_vibrationEffectName</parametername>
</parameternamelist>
<parameterdescription>
<para>Vibration effect </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="291" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1afbe17078026be04576ede4e99ed85492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isGamepadAxisJustPressed</definition>
        <argsstring>(ControllerAxis _axis, int _controllerID=0)</argsstring>
        <name>isGamepadAxisJustPressed</name>
        <qualifiedname>RDE::InputManager::isGamepadAxisJustPressed</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a85a7bdb473e6e958f919166f3fc0529d" kindref="member">ControllerAxis</ref></type>
          <declname>_axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_controllerID</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns true if the axis button is pressed and won&apos;t return true until the axis button is released and pressed again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_axis</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> Axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_controllerID</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="300" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1ae5205477c272d262a3f46cfabd0e6985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isGamepadAxisPressed</definition>
        <argsstring>(ControllerAxis _axis, int _controllerID=0)</argsstring>
        <name>isGamepadAxisPressed</name>
        <qualifiedname>RDE::InputManager::isGamepadAxisPressed</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a85a7bdb473e6e958f919166f3fc0529d" kindref="member">ControllerAxis</ref></type>
          <declname>_axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_controllerID</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns true while the axis button is being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_axis</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> Axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_controllerID</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="308" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a0903888e9c9bb7ac94afb71773a2fbbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isGamepadAxisReleased</definition>
        <argsstring>(ControllerAxis _axis, int _controllerID=0)</argsstring>
        <name>isGamepadAxisReleased</name>
        <qualifiedname>RDE::InputManager::isGamepadAxisReleased</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1a85a7bdb473e6e958f919166f3fc0529d" kindref="member">ControllerAxis</ref></type>
          <declname>_axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_controllerID</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns true while the axis button is not being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_axis</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_controllerID</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_r_d_e_1_1_controller" kindref="compound">Controller</ref> ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="316" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1af79d4da8ba0c14b9fd1e7720f5581cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isMobileScreenJustPressed</definition>
        <argsstring>(int _fingerID)</argsstring>
        <name>isMobileScreenJustPressed</name>
        <qualifiedname>RDE::InputManager::isMobileScreenJustPressed</qualifiedname>
        <param>
          <type>int</type>
          <declname>_fingerID</declname>
        </param>
        <briefdescription>
<para>Returns true if the screen is pressed and won&apos;t return true until the screen is released and pressed again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_fingerID</parametername>
</parameternamelist>
<parameterdescription>
<para>Finger ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="324" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a3a13bdd1ba6b67c011b6df020da328d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isMobileScreenJustReleased</definition>
        <argsstring>(int _fingerID)</argsstring>
        <name>isMobileScreenJustReleased</name>
        <qualifiedname>RDE::InputManager::isMobileScreenJustReleased</qualifiedname>
        <param>
          <type>int</type>
          <declname>_fingerID</declname>
        </param>
        <briefdescription>
<para>Returns true if the screen is released and won&apos;t return true until the button is screen and released again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_fingerID</parametername>
</parameternamelist>
<parameterdescription>
<para>Finger ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="331" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a3f0862a0d386ffab7538b6f9be74c824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isMobileScreenPressed</definition>
        <argsstring>(int _fingerID)</argsstring>
        <name>isMobileScreenPressed</name>
        <qualifiedname>RDE::InputManager::isMobileScreenPressed</qualifiedname>
        <param>
          <type>int</type>
          <declname>_fingerID</declname>
        </param>
        <briefdescription>
<para>Returns true while the screen is being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_fingerID</parametername>
</parameternamelist>
<parameterdescription>
<para>Finger ID @returnbool </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="338" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a9af54f92b148548e116351cf6bb8b26e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RDE::InputManager::isMobileScreenRelease</definition>
        <argsstring>(int _fingerID)</argsstring>
        <name>isMobileScreenRelease</name>
        <qualifiedname>RDE::InputManager::isMobileScreenRelease</qualifiedname>
        <param>
          <type>int</type>
          <declname>_fingerID</declname>
        </param>
        <briefdescription>
<para>Returns true while the screen is not being pressed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_fingerID</parametername>
</parameternamelist>
<parameterdescription>
<para>Finger ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="345" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a9843994fc09ce4c3e06a06638bd0d413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_r_d_e_1aba599888c87f5bf9b6052d710bc6923f" kindref="member">SystemEventEnum</ref> &gt;</type>
        <definition>std::vector&lt; SystemEventEnum &gt; RDE::InputManager::getEventsIgnored</definition>
        <argsstring>(const InputType &amp;_inputType)</argsstring>
        <name>getEventsIgnored</name>
        <qualifiedname>RDE::InputManager::getEventsIgnored</qualifiedname>
        <param>
          <type>const <ref refid="namespace_r_d_e_1a7366e3aaf50893b069748c2821751d2e" kindref="member">InputType</ref> &amp;</type>
          <declname>_inputType</declname>
        </param>
        <briefdescription>
<para>Returns the list of ignored events for a platform. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_inputType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;SystemEventEnum&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="352" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1aa248f40a4580eb333f9a9768535b638c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::InputManager::addEventToIgnore</definition>
        <argsstring>(const InputType &amp;_inputType, const SystemEventEnum &amp;_event)</argsstring>
        <name>addEventToIgnore</name>
        <qualifiedname>RDE::InputManager::addEventToIgnore</qualifiedname>
        <param>
          <type>const <ref refid="namespace_r_d_e_1a7366e3aaf50893b069748c2821751d2e" kindref="member">InputType</ref> &amp;</type>
          <declname>_inputType</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_r_d_e_1aba599888c87f5bf9b6052d710bc6923f" kindref="member">SystemEventEnum</ref> &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Adds an event as ignored. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_inputType</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_input" kindref="compound">Input</ref> type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="359" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_input_manager_1a576f44a427ec39346ebc348350cd78d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RDE::InputManager::removeEventToIgnore</definition>
        <argsstring>(const InputType &amp;_inputType, const SystemEventEnum &amp;_event)</argsstring>
        <name>removeEventToIgnore</name>
        <qualifiedname>RDE::InputManager::removeEventToIgnore</qualifiedname>
        <param>
          <type>const <ref refid="namespace_r_d_e_1a7366e3aaf50893b069748c2821751d2e" kindref="member">InputType</ref> &amp;</type>
          <declname>_inputType</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_r_d_e_1aba599888c87f5bf9b6052d710bc6923f" kindref="member">SystemEventEnum</ref> &amp;</type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>Removes and event as ignored. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_inputType</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_input" kindref="compound">Input</ref> type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_r_d_e_1_1_event" kindref="compound">Event</ref> type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/inputSystem/input/Input.h" line="366" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class allows the user to ask for any user input in a easy and accessible way. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="attention"><para>All managers destroy all the resources before closing the application, it is not needed to be done by the end user. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="engine/include/core/systems/inputSystem/input/Input.h" line="114" column="5" bodyfile="engine/include/core/systems/inputSystem/input/Input.h" bodystart="114" bodyend="367"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_input_manager_1aa248f40a4580eb333f9a9768535b638c" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>addEventToIgnore</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a820a5f066e4616845b3060482e42986d" prot="private" virt="non-virtual"><scope>RDE::InputManager</scope><name>controllerInput</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a2115cb69b4f71c626b824339b465eb26" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>destroy</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1af043107c75e84d0f59ef7882e535c8a7" prot="private" virt="non-virtual"><scope>RDE::InputManager</scope><name>engine</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a64eb9f9c65e2952b36765eb20d2e448c" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>gamepadVibrate</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a9843994fc09ce4c3e06a06638bd0d413" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>getEventsIgnored</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a14115c36583f3b0049cbfb598287d6af" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>getMousePosCanvas</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1aaa0491636c9c36f91f9d4608daf06b82" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>getMousePosScreenCoords</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a967bc8b7dc0c81a73b7ee0025dcf7167" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>getMousePosWorldPos</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a801b49121f48955ef095d97af7fdd5a8" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>init</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1afbe17078026be04576ede4e99ed85492" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isGamepadAxisJustPressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1ae5205477c272d262a3f46cfabd0e6985" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isGamepadAxisPressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a0903888e9c9bb7ac94afb71773a2fbbc" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isGamepadAxisReleased</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1afcae7ae2faeb7286463318ace4c36afa" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isGamepadButtonJustPressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a7db337c4d9a1844e957f648058aefed6" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isGamepadButtonJustReleased</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1aa4c9dbdecd87178a8c1c48937b5dc64e" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isGamepadButtonPressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a7a4c758460d107421340e3b92879bece" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isGamepadButtonReleased</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1af87de5cc1a9e715f31b6e61f43160dbe" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isKeyJustPressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a18ba2bf0cfe0ed1bb755976ba5ba156f" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isKeyJustReleased</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a5f36ac467a41d4897ed020e31c99274e" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isKeyPressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1afba59b338702ae9884258e92c9d5507b" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isKeyReleased</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1af79d4da8ba0c14b9fd1e7720f5581cbc" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isMobileScreenJustPressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a3a13bdd1ba6b67c011b6df020da328d5" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isMobileScreenJustReleased</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a3f0862a0d386ffab7538b6f9be74c824" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isMobileScreenPressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a9af54f92b148548e116351cf6bb8b26e" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isMobileScreenRelease</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a8617526af870d2b427a0b2f817d1c004" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isMouseJustPressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a34c1930540c60508b7f8d8db2b64cc40" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isMouseJustReleased</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a293cad5478ca5cae8bdbef25925ee1f1" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isMousePressed</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1acb889c95a989d9077cd1ccc7c00e6369" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>isMouseReleased</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1ab9a38ca0127dbdeb12b30eb392731452" prot="private" virt="non-virtual"><scope>RDE::InputManager</scope><name>keyboardInput</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a67d00a9ff63550d8af1ceb127df55c39" prot="private" virt="non-virtual"><scope>RDE::InputManager</scope><name>mobileInput</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a784c00221b64cc00de9daa58a5b453d6" prot="private" virt="non-virtual"><scope>RDE::InputManager</scope><name>mouseInput</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a831dc97613ff2754094efab87aad4c78" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>pollEvents</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a50bba8199d23559a5d8a0fccac8072ca" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>reassignController</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1a576f44a427ec39346ebc348350cd78d4" prot="public" virt="non-virtual"><scope>RDE::InputManager</scope><name>removeEventToIgnore</name></member>
      <member refid="class_r_d_e_1_1_input_manager_1aa893ba20e3aa1e585cd58701ebeee783" prot="private" virt="non-virtual"><scope>RDE::InputManager</scope><name>windowInput</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
