<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_r_d_e_1_1_key_released_event" kind="class" language="C++" prot="public">
    <compoundname>RDE::KeyReleasedEvent</compoundname>
    <basecompoundref refid="class_r_d_e_1_1_key_event" prot="public" virt="non-virtual">RDE::KeyEvent</basecompoundref>
    <includes refid="_key_event_8h" local="no">KeyEvent.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_d_e_1_1_key_released_event_1aee8ab62c0fccbd947512aa536441a5d7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RDE::KeyReleasedEvent::KeyReleasedEvent</definition>
        <argsstring>(KeyCode _keyCode)</argsstring>
        <name>KeyReleasedEvent</name>
        <qualifiedname>RDE::KeyReleasedEvent::KeyReleasedEvent</qualifiedname>
        <param>
          <type><ref refid="namespace_r_d_e_1ae1b377580a5f0afd4b6021072ed14bde" kindref="member">KeyCode</ref></type>
          <declname>_keyCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/KeyEvent.h" line="90" column="22" bodyfile="engine/include/core/systems/eventSystem/KeyEvent.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_key_released_event_1a3bba6cb7d03c2413b0f7d4938bddec86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string RDE::KeyReleasedEvent::toString</definition>
        <argsstring>() const override</argsstring>
        <name>toString</name>
        <qualifiedname>RDE::KeyReleasedEvent::toString</qualifiedname>
        <reimplements refid="class_r_d_e_1_1_event_1a2ad3c2a15cf1a3d619cfada8dbf02638">toString</reimplements>
        <briefdescription>
<para>Returns all the event in form of string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/KeyEvent.h" line="92" column="26" bodyfile="engine/include/core/systems/eventSystem/KeyEvent.h" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_key_released_event_1ac02fde366e96a2aff793fc76ea43783d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_r_d_e_1af739ab5b6aed02ef5ab138f6f9ebe912" kindref="member">EventType</ref></type>
        <definition>EventType RDE::KeyReleasedEvent::getEventType</definition>
        <argsstring>() const override</argsstring>
        <name>getEventType</name>
        <qualifiedname>RDE::KeyReleasedEvent::getEventType</qualifiedname>
        <reimplements refid="class_r_d_e_1_1_event_1a17812fdef1f1bc1517e7658cbdf8ba3b">getEventType</reimplements>
        <briefdescription>
<para>Returns the event type from the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>EventType </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/KeyEvent.h" line="100" column="24" bodyfile="engine/include/core/systems/eventSystem/KeyEvent.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_r_d_e_1_1_key_released_event_1aa03fa16e20920bb0e0036471d6b7976e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>const char * RDE::KeyReleasedEvent::getName</definition>
        <argsstring>() const override</argsstring>
        <name>getName</name>
        <qualifiedname>RDE::KeyReleasedEvent::getName</qualifiedname>
        <reimplements refid="class_r_d_e_1_1_event_1a3ea36fb9accc90c88c34d946515724a9">getName</reimplements>
        <briefdescription>
<para>Returns the event name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const char* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/KeyEvent.h" line="101" column="25" bodyfile="engine/include/core/systems/eventSystem/KeyEvent.h" bodystart="101" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_r_d_e_1_1_key_released_event_1a1f636002b90533aa019457847b9e4ee1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_r_d_e_1af739ab5b6aed02ef5ab138f6f9ebe912" kindref="member">EventType</ref></type>
        <definition>static EventType RDE::KeyReleasedEvent::getStaticType</definition>
        <argsstring>()</argsstring>
        <name>getStaticType</name>
        <qualifiedname>RDE::KeyReleasedEvent::getStaticType</qualifiedname>
        <briefdescription>
<para>Implementation of the rest of the static and virtual methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/core/systems/eventSystem/KeyEvent.h" line="99" column="30" bodyfile="engine/include/core/systems/eventSystem/KeyEvent.h" bodystart="99" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents all of the events that involves releasing a key. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>RDE::Event</label>
        <link refid="class_r_d_e_1_1_event"/>
      </node>
      <node id="2">
        <label>RDE::KeyEvent</label>
        <link refid="class_r_d_e_1_1_key_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>RDE::KeyReleasedEvent</label>
        <link refid="class_r_d_e_1_1_key_released_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>RDE::Event</label>
        <link refid="class_r_d_e_1_1_event"/>
      </node>
      <node id="2">
        <label>RDE::KeyEvent</label>
        <link refid="class_r_d_e_1_1_key_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>RDE::KeyReleasedEvent</label>
        <link refid="class_r_d_e_1_1_key_released_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="engine/include/core/systems/eventSystem/KeyEvent.h" line="88" column="5" bodyfile="engine/include/core/systems/eventSystem/KeyEvent.h" bodystart="88" bodyend="102"/>
    <listofallmembers>
      <member refid="class_r_d_e_1_1_key_event_1a0b94c88fae0d3a28a7e10a016a178eaf" prot="public" virt="virtual"><scope>RDE::KeyReleasedEvent</scope><name>getCategoryFlags</name></member>
      <member refid="class_r_d_e_1_1_key_released_event_1ac02fde366e96a2aff793fc76ea43783d" prot="public" virt="virtual"><scope>RDE::KeyReleasedEvent</scope><name>getEventType</name></member>
      <member refid="class_r_d_e_1_1_key_event_1ade11851cd15223b44137a279ee8b1912" prot="public" virt="non-virtual"><scope>RDE::KeyReleasedEvent</scope><name>getKeyCode</name></member>
      <member refid="class_r_d_e_1_1_key_released_event_1aa03fa16e20920bb0e0036471d6b7976e" prot="public" virt="virtual"><scope>RDE::KeyReleasedEvent</scope><name>getName</name></member>
      <member refid="class_r_d_e_1_1_key_released_event_1a1f636002b90533aa019457847b9e4ee1" prot="public" virt="non-virtual"><scope>RDE::KeyReleasedEvent</scope><name>getStaticType</name></member>
      <member refid="class_r_d_e_1_1_event_1a372a2b0c1a05c7f8b7e48bfbac7042d0" prot="public" virt="non-virtual"><scope>RDE::KeyReleasedEvent</scope><name>handled</name></member>
      <member refid="class_r_d_e_1_1_event_1a853416fc3754e4052bf7f24d081f82fd" prot="public" virt="non-virtual"><scope>RDE::KeyReleasedEvent</scope><name>isInCategory</name></member>
      <member refid="class_r_d_e_1_1_key_event_1af4427c761a48970ac4d83f5809f5aa28" prot="protected" virt="non-virtual"><scope>RDE::KeyReleasedEvent</scope><name>keyCode</name></member>
      <member refid="class_r_d_e_1_1_key_event_1a5f73d024909461c538c35717975789c1" prot="protected" virt="non-virtual"><scope>RDE::KeyReleasedEvent</scope><name>KeyEvent</name></member>
      <member refid="class_r_d_e_1_1_key_released_event_1aee8ab62c0fccbd947512aa536441a5d7" prot="public" virt="non-virtual"><scope>RDE::KeyReleasedEvent</scope><name>KeyReleasedEvent</name></member>
      <member refid="class_r_d_e_1_1_key_released_event_1a3bba6cb7d03c2413b0f7d4938bddec86" prot="public" virt="virtual"><scope>RDE::KeyReleasedEvent</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
