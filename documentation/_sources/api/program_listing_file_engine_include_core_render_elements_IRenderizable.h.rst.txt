
.. _program_listing_file_engine_include_core_render_elements_IRenderizable.h:

Program Listing for File IRenderizable.h
========================================

|exhale_lsh| :ref:`Return to documentation for file <file_engine_include_core_render_elements_IRenderizable.h>` (``engine/include/core/render/elements/IRenderizable.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   //
   // Created by borja on 14/04/2022.
   //
   
   #ifndef ENGINE_I_RENDERIZABLE_H
   #define ENGINE_I_RENDERIZABLE_H
   
   #include "core/render/elements/Texture.h"
   #include "core/render/elements/ShaderManager.h"
   #include "core/render/elements/Batch.h"
   
   namespace GDE {
   
       class IViewPort;
       struct OpenGLVertex;
       class Transform;
   
       class IRenderizable {
           public:
               Color color = Color::White;
   
               int layer = 0;
   
               GLuint shaderID = -1;
   
               BatchPriority batchPriority = BatchPriority::SpritePriority;
   
           public:
               [[nodiscard]] virtual GLuint getTexture() const = 0;
   
               [[nodiscard]] virtual Vec2I getSize() const = 0;
   
               [[nodiscard]] virtual IntRect getRegion() const = 0;
   
               virtual void draw(std::vector<OpenGLVertex>& _vertices, std::vector<uint32_t>& _indices, const Transform& _transform, const IViewPort& _viewport) const = 0;
   
               virtual ~IRenderizable() {  }
       };
   
   }
   
   #endif //ENGINE_I_RENDERIZABLE_H
